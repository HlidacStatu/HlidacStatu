
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var wpPost = WpPost.FromJson(jsonString);

namespace HlidacStatu.Lib.Text.WordpressPost
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class WpPost
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; }

        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public DateTime? Date { get; set; }

        [JsonProperty("date_gmt", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? DateGmt { get; set; }

        [JsonProperty("guid", NullValueHandling = NullValueHandling.Ignore)]
        public GuidClass Guid { get; set; }

        [JsonProperty("modified", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Modified { get; set; }

        [JsonProperty("modified_gmt", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ModifiedGmt { get; set; }

        [JsonProperty("slug", NullValueHandling = NullValueHandling.Ignore)]
        public string Slug { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("link", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Link { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public Title Title { get; set; }

        [JsonProperty("content", NullValueHandling = NullValueHandling.Ignore)]
        public Content Content { get; set; }

        [JsonProperty("excerpt", NullValueHandling = NullValueHandling.Ignore)]
        public Content Excerpt { get; set; }

        [JsonProperty("author", NullValueHandling = NullValueHandling.Ignore)]
        public long? Author { get; set; }

        [JsonProperty("featured_media", NullValueHandling = NullValueHandling.Ignore)]
        public long? FeaturedMedia { get; set; }

        [JsonProperty("comment_status", NullValueHandling = NullValueHandling.Ignore)]
        public string CommentStatus { get; set; }

        [JsonProperty("ping_status", NullValueHandling = NullValueHandling.Ignore)]
        public string PingStatus { get; set; }

        [JsonProperty("sticky", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sticky { get; set; }

        [JsonProperty("template", NullValueHandling = NullValueHandling.Ignore)]
        public string Template { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }

        [JsonProperty("meta", NullValueHandling = NullValueHandling.Ignore)]
        public Meta Meta { get; set; }

        [JsonProperty("categories", NullValueHandling = NullValueHandling.Ignore)]
        public long[] Categories { get; set; }

        [JsonProperty("tags", NullValueHandling = NullValueHandling.Ignore)]
        public long[] Tags { get; set; }

        [JsonProperty("jetpack_featured_media_url", NullValueHandling = NullValueHandling.Ignore)]
        public string JetpackFeaturedMediaUrl { get; set; }

        [JsonProperty("jetpack_sharing_enabled", NullValueHandling = NullValueHandling.Ignore)]
        public bool? JetpackSharingEnabled { get; set; }

        [JsonProperty("jetpack-related-posts", NullValueHandling = NullValueHandling.Ignore)]
        public JetpackRelatedPost[] JetpackRelatedPosts { get; set; }

        [JsonProperty("_links", NullValueHandling = NullValueHandling.Ignore)]
        public Links Links { get; set; }
    }

    public partial class Content
    {
        [JsonProperty("rendered", NullValueHandling = NullValueHandling.Ignore)]
        public string Rendered { get; set; }

        [JsonProperty("protected", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Protected { get; set; }
    }

    public partial class GuidClass
    {
        [JsonProperty("rendered", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Rendered { get; set; }
    }

    public partial class JetpackRelatedPost
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("url_meta", NullValueHandling = NullValueHandling.Ignore)]
        public UrlMeta UrlMeta { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public string Date { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Format { get; set; }

        [JsonProperty("excerpt", NullValueHandling = NullValueHandling.Ignore)]
        public string Excerpt { get; set; }

        [JsonProperty("rel", NullValueHandling = NullValueHandling.Ignore)]
        public string Rel { get; set; }

        [JsonProperty("context", NullValueHandling = NullValueHandling.Ignore)]
        public string Context { get; set; }

        [JsonProperty("img", NullValueHandling = NullValueHandling.Ignore)]
        public Img Img { get; set; }

        [JsonProperty("classes", NullValueHandling = NullValueHandling.Ignore)]
        public object[] Classes { get; set; }
    }

    public partial class Img
    {
        [JsonProperty("alt_text", NullValueHandling = NullValueHandling.Ignore)]
        public string AltText { get; set; }

        [JsonProperty("src", NullValueHandling = NullValueHandling.Ignore)]
        public string Src { get; set; }

        [JsonProperty("width", NullValueHandling = NullValueHandling.Ignore)]
        public long? Width { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }
    }

    public partial class UrlMeta
    {
        [JsonProperty("origin", NullValueHandling = NullValueHandling.Ignore)]
        public long? Origin { get; set; }

        [JsonProperty("position", NullValueHandling = NullValueHandling.Ignore)]
        public long? Position { get; set; }
    }

    public partial class Links
    {
        [JsonProperty("self", NullValueHandling = NullValueHandling.Ignore)]
        public About[] Self { get; set; }

        [JsonProperty("collection", NullValueHandling = NullValueHandling.Ignore)]
        public About[] Collection { get; set; }

        [JsonProperty("about", NullValueHandling = NullValueHandling.Ignore)]
        public About[] About { get; set; }

        [JsonProperty("author", NullValueHandling = NullValueHandling.Ignore)]
        public Author[] Author { get; set; }

        [JsonProperty("replies", NullValueHandling = NullValueHandling.Ignore)]
        public Author[] Replies { get; set; }

        [JsonProperty("version-history", NullValueHandling = NullValueHandling.Ignore)]
        public VersionHistory[] VersionHistory { get; set; }

        [JsonProperty("predecessor-version", NullValueHandling = NullValueHandling.Ignore)]
        public PredecessorVersion[] PredecessorVersion { get; set; }

        [JsonProperty("wp:attachment", NullValueHandling = NullValueHandling.Ignore)]
        public About[] WpAttachment { get; set; }

        [JsonProperty("wp:term", NullValueHandling = NullValueHandling.Ignore)]
        public WpTerm[] WpTerm { get; set; }

        [JsonProperty("curies", NullValueHandling = NullValueHandling.Ignore)]
        public Cury[] Curies { get; set; }
    }

    public partial class About
    {
        [JsonProperty("href", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Href { get; set; }
    }

    public partial class Author
    {
        [JsonProperty("embeddable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Embeddable { get; set; }

        [JsonProperty("href", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Href { get; set; }
    }

    public partial class Cury
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("href", NullValueHandling = NullValueHandling.Ignore)]
        public string Href { get; set; }

        [JsonProperty("templated", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Templated { get; set; }
    }

    public partial class PredecessorVersion
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; }

        [JsonProperty("href", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Href { get; set; }
    }

    public partial class VersionHistory
    {
        [JsonProperty("count", NullValueHandling = NullValueHandling.Ignore)]
        public long? Count { get; set; }

        [JsonProperty("href", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Href { get; set; }
    }

    public partial class WpTerm
    {
        [JsonProperty("taxonomy", NullValueHandling = NullValueHandling.Ignore)]
        public string Taxonomy { get; set; }

        [JsonProperty("embeddable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Embeddable { get; set; }

        [JsonProperty("href", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Href { get; set; }
    }

    public partial class Meta
    {
        [JsonProperty("ngg_post_thumbnail", NullValueHandling = NullValueHandling.Ignore)]
        public long? NggPostThumbnail { get; set; }

        [JsonProperty("spay_email", NullValueHandling = NullValueHandling.Ignore)]
        public string SpayEmail { get; set; }
    }

    public partial class Title
    {
        [JsonProperty("rendered", NullValueHandling = NullValueHandling.Ignore)]
        public string Rendered { get; set; }
    }

    public partial class WpPost
    {
        public static WpPost[] FromJson(string json) => JsonConvert.DeserializeObject<WpPost[]>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this WpPost[] self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}





