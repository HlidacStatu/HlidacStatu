@using System.Web.Mvc;
@using Devmasters.Core;
@using Nest;
@using HlidacStatu.Lib;
@using System.Linq;
@using HlidacStatu.Lib.Data.External.Zabbix;


@functions
{
    private static new HtmlHelper<object>
    Html
    {
        get { return ((WebViewPage)CurrentPage).Html; }
    }

    private static UrlHelper Url
    {
        get { return ((WebViewPage)CurrentPage).Url; }
    }
}


@helper ChartSharedJavascript()
    {
        <script>

        function getChartStatus(response, style)
        {
            var s = "";
            if (response == @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.BadHttpCode.ToString(HlidacStatu.Util.Consts.enCulture)))
                if (style == 0) return "odpověděla s chybou"; else return "odpovídá<br/>s chybou";
            if (response == @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.TimeOuted.ToString(HlidacStatu.Util.Consts.enCulture)))
                if (style == 0) return "vůbec neodpověděla"; else return "vůbec<br/>neodpovídá";
            if (response <= @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.OKLimit.ToString(HlidacStatu.Util.Consts.enCulture)))
                if (style == 0) return "byla rychlá"; else return "reaguje<br/>rychle";
            if (response <= @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit.ToString(HlidacStatu.Util.Consts.enCulture)))
                if (style == 0) return "byla pomalá"; else return "reaguje<br/>pomalu";
             if (response > @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit.ToString(HlidacStatu.Util.Consts.enCulture)))
                if (style == 0) return "byla nedostupná"; else return "reaguje<br/>velmi pomalu";
          return s;
    }
    function getChartStatusColor(response, style)
    {
        var s = "";
        if (response <= @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.OKLimit.ToString(HlidacStatu.Util.Consts.enCulture)))
            return "@(ZabAvailability.GetStatusChartColor(Statuses.OK))";
        if (response <= @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit.ToString(HlidacStatu.Util.Consts.enCulture)))
            return "@(ZabAvailability.GetStatusChartColor(Statuses.Pomalé))";
        if (response > @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit.ToString(HlidacStatu.Util.Consts.enCulture)))
            return "@(ZabAvailability.GetStatusChartColor(Statuses.Nedostupné))";
        if (response == @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.TimeOuted.ToString(HlidacStatu.Util.Consts.enCulture)))
            return "@(ZabAvailability.GetStatusChartColor(Statuses.TimeOuted))";
        if (response == @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.BadHttpCode.ToString(HlidacStatu.Util.Consts.enCulture)))
            return "@(ZabAvailability.GetStatusChartColor(Statuses.BadHttpCode))";
        return s;
    }
        </script>
}

@helper Chart(string dataName, int hoursBack, int height, bool detail, string hash="")
    {
var uniqueId = "_chart_" + Devmasters.Core.TextUtil.GenRandomString(8);
var colsize = 0; //data.Select(d => d.ColSize(fromDate, toDate)).Max();
var colors = new string[] { ZabAvailability.GetStatusChartColor(Statuses.OK),
        ZabAvailability.GetStatusChartColor(Statuses.Pomalé),
        ZabAvailability.GetStatusChartColor(Statuses.Nedostupné),
        ZabAvailability.GetStatusChartColor(Statuses.TimeOuted),
        ZabAvailability.GetStatusChartColor(Statuses.BadHttpCode),
        ZabAvailability.GetStatusChartColor(Statuses.Unknown)
        };

        <div id="adbmsg@(uniqueId)" style="display:none;" class="row">
            <div class="col-xs-12 text-center center-block">
                <div class="alert alert-danger">
                    <p>
                        <strong>Nevidíte žádný graf?</strong> Některé verze AdBlock a jiných blokovačů reklam přeruší vykreslení grafu.
                    </p><p>Vypněte AdBlock pro naše servery a graf poběží. A nebojte, reklamy vám tu nebudeme ukazovat.</p>
                    @*<p>Na některých telefonech to také zlobí, pracujeme na opravě. Omlouváme se.</p>*@
                </div>
            </div>
        </div>
        <div id="container@(uniqueId)" style="height:@(height)px; min-width: 310px; max-width: 1000px; margin: 0 auto"></div>


        <script>
        var chart@(uniqueId);
        var cats@(uniqueId) =null;
            $(document).ready(function () { //start chart

            function showwarn@(uniqueId)() {
                    var dsize = $('#container@(uniqueId)').html().length;
                    if (dsize < 1000) {
                        $("#adbmsg@(uniqueId)").show();
                    }
            else {
                        $("#adbmsg@(uniqueId)").hide();
                    }
            };

            Highcharts.setOptions({
                lang: {
                    shortWeekdays: ['Ne', 'Po', 'Út', 'St', 'Čt', 'Pá', 'So']
                }
                    });


            var chartopt@(uniqueId) = {
                chart: {
                    renderTo:'container@(uniqueId)',
                    type: 'heatmap',
                    events: {
                        load: function () {
                            $("#adbmsg@(uniqueId)").hide();
                            setTimeout(function () {
                                showwarn@(uniqueId);
                            }, 1000);
                        }
                    }
                },
                title: null, //{text: 'Dostupnost služeb za poslední 2 dny'},
                plotOptions: {
                },

                xAxis: {
                    type: 'datetime',
                    labels: {
                        align: 'left',
                        x: 5,
                        y: 14,
                        format: '{value:%a %H:%M}' // long month
                    },
                    showLastLabel: false,
                    //tickLength: 16
                },
                legend: {
                    //symbolWidth: 380,
                    verticalAlign: 'top',
                    align: 'right',
                    y: 25,
                },
                colorAxis: {
                    dataClasses: [{
                        to: @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.OKLimit.ToString(HlidacStatu.Util.Consts.enCulture)),
                        name: 'Služba ' + getChartStatus(@(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.OKLimit.ToString(HlidacStatu.Util.Consts.enCulture)), 0),
                        color: '@colors[0]'
                    }, {
                        from: @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.OKLimit.ToString(HlidacStatu.Util.Consts.enCulture)),
                        to: @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit.ToString(HlidacStatu.Util.Consts.enCulture)),
                        color: '@colors[1]',
                        name: 'Služba ' + getChartStatus(@(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit.ToString(HlidacStatu.Util.Consts.enCulture)), 0)
                    }, {
                        from: @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit.ToString(HlidacStatu.Util.Consts.enCulture)),
                        to: @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.TimeOuted.ToString(HlidacStatu.Util.Consts.enCulture)),
                        color: '@colors[2]',
                        name: 'Služba ' + getChartStatus(@((HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit + 1).ToString(HlidacStatu.Util.Consts.enCulture)), 0)
                    },
                       {
                        from: @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.TimeOuted.ToString(HlidacStatu.Util.Consts.enCulture)),
                        to: @((HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.BadHttpCode-0.001m).ToString(HlidacStatu.Util.Consts.enCulture)),
                        color: '@colors[3]',
                        name: 'Odezva nejde změřit'
                        },
                       {
                        from: @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.BadHttpCode.ToString(HlidacStatu.Util.Consts.enCulture)),
                        to: @((HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.BadHttpCode+0.001m).ToString(HlidacStatu.Util.Consts.enCulture)),
                        color: '@colors[4]',
                        name: 'Chyba serveru'
                        },
                       {
                        from: @((HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.BadHttpCode+0.001m).ToString(HlidacStatu.Util.Consts.enCulture)),
                        color: '@colors[5]',
                        name: 'Odezva nezměřena'
                        }


                    ],
                    min: 0,
                    max: 3.2,
                    startOnTick: false,
                    endOnTick: false,
                    step: 4,
                    //labels: {
                    //    format: '{value} s'
                    //},
                    @*labelFormatter: function () {
                            //return this.name + "x";
                            var s = "";
                            if (this.value <= @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.OKLimit))
                            s = "Rychlá odezva";
                            if (this.value <= @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit))
                            s = "Pomalá odezva";
                            if (this.value > @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit))
                            s = "Přetížený či nedostupný";
                            return s;
                    },*@

                },
                yAxis: [{
                    categories: [{} ],
                    title: {
                        text: null
                    },
                    labels: {
                        useHTML: true,
                        formatter: function () {
                            var obj = cats@(uniqueId)[this.value];
                            var status = '<span style="font-size:15px;color:@colors[0]" class="glyphicon glyphicon-ok-sign"></span> ';
                            if (obj.lastResponse.Response > @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.OKLimit.ToString(HlidacStatu.Util.Consts.enCulture)))
                                status = '<span style="font-size:15px;color:@colors[1]" class="glyphicon glyphicon-ok-sign"></span> ';
                            if (obj.lastResponse.Response > @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.SlowLimit.ToString(HlidacStatu.Util.Consts.enCulture)))
                                status = '<span style="font-size:15px;color:@colors[2]" class="glyphicon glyphicon-ok-sign"></span> ';
                            if (obj.lastResponse.Response == @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.TimeOuted.ToString(HlidacStatu.Util.Consts.enCulture)))
                                status = '<span style="font-size:15px;color:@colors[3]" class="glyphicon glyphicon-ok-sign"></span> ';
                            if (obj.lastResponse.Response == @(HlidacStatu.Lib.Data.External.Zabbix.ZabAvailability.BadHttpCode.ToString(HlidacStatu.Util.Consts.enCulture)))
                                status = '<span style="font-size:15px;color:@colors[4]" class="glyphicon glyphicon-ok-sign"></span> ';
                            var status2 = '<span style="color:' + getChartStatusColor(obj.lastResponse.Response) + '">právě ' + getChartStatus(obj.lastResponse.Response, 1) + '</span> ';
                            @if (detail)
                            {
                                <text>
                                        url = '<b>' + obj.host.publicname + '</b>';
                                </text>
                            }
                            else
                            {
                                <text>
                                        var url = '<a href="/statniweby/info/' + obj.host.hostid + '?h=' + obj.host.hash + '">' + obj.host.publicname + '</a>';
                                </text>
                            }

                            var s = '<div style="text-align:right;margin-top:9px;border-bottom:1px solid #ddd">'
                                + '<table cellpadding=0 cellspacing=0><tr>'
                                + '<td style="padding:0" align="right">' + url + '</td>'
                                + '<td rowspan="2"><span style="padding:0px 5px 0px 10px;">' + status + '</span></td>'
                                + '<td rowspan="2"><span style="margin-right:10px;">' + status2 + '</span></td></tr>'
                                + '<tr><td style="padding:0" align="right">' + (obj.host.urad || '') + '</td></tr></table>'
                                + '</div>'

                            return s;
                        }

                    },
                    minPadding: 0,
                    maxPadding: 0,
                    startOnTick: false,
                    endOnTick: false,
                    tickWidth: 1,
                }
                @*,
                {
                    // Secondary yAxis
                    linkedTo: 0,
                    title: null,
                    categories: [ @Html.Raw(data.Select(m => "'" + m.Host.hostid + "'").Aggregate((f, s) => f + "," + s)) ],
                    labels: {
                        useHTML: true,
                        formatter: function () {
                            var obj = cats@(uniqueId)[this.value];
                            if (obj == null)
                                return '';
                            var s = '<a href="/statniweby/info/' + obj.host.hostid + '?h=' + obj.host.hash + '">Detail</a>';
                            return s;
                        }
                    },
                    gridLineWidth: 0,
                    visible: @(detail.ToString().ToLower()),
                    opposite: true
                }*@

                ],//yAxis
                series: [{
                    boostThreshold: 100,
                    borderWidth: 1,
                    nullColor: '#ccc',
                    color: '#ff0000',
                    connectNulls: true,
                    colsize: @colsize, @*//@hoursBack * 60 * 1000,*@
                    rowsize: 1,
                    tooltip: {
                        headerFormat: 'Rychlost odezvy<br/>',
                        //pointFormat: '{point.x:%a %H:%M:%S}  <b>{point.value:.2f}s</b>',
                        pointFormatter: function () {
                            var timeout = @ZabAvailability.TimeOuted.ToString(HlidacStatu.Util.Consts.enCulture);
                            var badCode = @ZabAvailability.BadHttpCode.ToString(HlidacStatu.Util.Consts.enCulture);
                            var val = 'odezva ' + Highcharts.numberFormat(this.value, 2) + 's';
                            var s = '';
                            if (this.value == timeout) {
                                s = Highcharts.dateFormat('%a %H:%M:%S', this.x) + ' '
                                    + '<b>Služba ' + getChartStatus(this.value, 0) + "</b>";
                            }
                            else if (this.value == badCode) {
                                s = Highcharts.dateFormat('%a %H:%M:%S', this.x) + ' '
                                    + '<b>Služba ' + getChartStatus(this.value, 0) + "</b>";
                            }
                            else
                                s = Highcharts.dateFormat('%a %H:%M:%S', this.x) + ' '
                                    + '<b>Služba ' + getChartStatus(this.value, 0) + "</b><br/>"
                                    + '(' + val + ')';

                            return s;
                        }
                    },
                    turboThreshold: Number.MAX_VALUE, // #3404, remove after 4.0.5 release
                    data: [{}]

                }]
            };

            $('#container@(uniqueId)').html('<center><img src="/content/img/loading.gif" style="width:127px;height:auto;"><b>Stahujeme data</b>');
            $.getJSON('/StatniWeby/ChartData/@(dataName)?h=@(hoursBack)&hh=@(hash)', function (data) {
                chartopt@(uniqueId).series[0].data = data.data;
                chartopt@(uniqueId).yAxis[0].categories = data.categories;
                cats@(uniqueId) = data.cats;
                colsize = data.colsize;
                $('#container@(uniqueId)').html('');
                $("#adbmsg@(uniqueId)").show();
                chart@(uniqueId) = new Highcharts.Chart(chartopt@(uniqueId));
                $("#adbmsg@(uniqueId)").hide();

            });
            @*chartopt@(uniqueId).series[0].data = @Newtonsoft.Json.JsonConvert.SerializeObject(
                   data.AsEnumerable()
                       .Select((x, l) => x.DataForChart(fromDate, toDate, l))
                       .SelectMany(x => x)
                       .ToArray()
                          );*@



        }); //end chart

        </script>
}



@helper TableNextGroups(string active)
    {
        <h2>Další služby</h2>
        <div class="row">
            <div class="col-xs-12 col-sm-6 ">
                <div class="list-group">

                    <a href="@Url.Action("Https", "Weby")" class="list-group-item @Util.IfExists(active=="https","disabled")">
                        <span class="badge">@(ZabTools.SslStatuses()?.Count() ?? 0)</span>
                        Žebříček státních serverů podle HTTPS Labs hodnocení
                    </a>


                    <a href="@Url.Action("Index", "Weby")" class="list-group-item @Util.IfExists(active=="index","disabled")">
                        <span class="badge">@(ZabTools.WebyItems("0")?.Count() ?? 0)</span>
                        Nejdůležitější služby státní správy
                    </a>

                    <a href="@Url.Action("Dalsi","Weby", new { @id="ustredni" })" class="list-group-item @Util.IfExists(active=="ustredni","disabled")">
                        <span class="badge">@(ZabTools.WebyItems("ustredni")?.Count() ?? 0)</span>
                        Služby ústředních orgánů státní správy
                    </a>
                    <a href="@Url.Action("Dalsi","Weby", new { @id="1" })" class="list-group-item @Util.IfExists(active=="1","disabled")">
                        <span class="badge">@(ZabTools.WebyItems("1")?.Count() ?? 0)</span>
                        Další důležité služby
                    </a>
                    @*<a href="#" class="list-group-item disabled">
                            <span class="badge">Připravujeme</span>
                            Služby krajů ČR
                        </a>*@
                    <a href="/statniweby/opendata" class="list-group-item @Util.IfExists(active=="opendata","disabled")">
                        <span class="badge">JSON</span>
                        Naměřené údaje jako open data
                    </a>
                </div>
            </div>
        </div>


}