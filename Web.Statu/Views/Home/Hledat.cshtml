@model HlidacStatu.Lib.Data.Search.MultiResult
@using System.Linq;
@using Devmasters;
@using Devmasters.Collections;
@using HlidacStatu.Web.Framework;
@using HlidacStatu.Lib;
@using HlidacStatu.Lib.Data;
@using HlidacStatu.Lib.Searching;
@using Devmasters.Enums;

@{ int numOfSmluv = SearchDataResult<object>.DefaultPageSizeGlobal;
                int numOfOsob = 8;
                int numOfDotaci = SearchDataResult<object>.DefaultPageSizeGlobal;
                int numOfFirem = SearchDataResult<object>.DefaultPageSizeGlobal;
                int numOfVZ = SearchDataResult<object>.DefaultPageSizeGlobal;
                int numOfInsolvenci = SearchDataResult<object>.DefaultPageSizeGlobal;


                ViewBag.ShowBookmarkUrl = true;

                ViewBag.Title = "Výsledky hledání";
                //ViewBag.SubTitle = Model?.Query;

                bool hasPreview = Model.HasOsoby;

                Dictionary<string, System.TimeSpan> viewRenderTimes = new Dictionary<string, TimeSpan>(); }
@section scripts
    {
    <script src="/Scripts/typeahead.jquery.min.js"></script>
    <script src="/Scripts/bloodhound.min.js"></script>
    <link href="/Content/typeaheadjs.css" media="all" rel="stylesheet" />
}
@section breadcrumb
{
    <ol class="breadcrumb">
        <li><a href="/">Hlídač Státu</a></li>
        <li><a href="@Url.Action("Smlouvy", "Home")">Hledání</a></li>
        <li title="@Model.Query">@(Devmasters.TextUtil.ShortenText(Model.Query, 60, "..."))</li>
    </ol>
}

@if (string.IsNullOrEmpty(Model.Query))
{

<div class="searching container">
    <div class="row" style="margin-top: 10px;">
        <div class="col-xs-1">
            <img style="margin-top:20px; height:30px;width:auto" src="/Content/img/icon-not-found.svg">

        </div>
        <div class="col-xs-11">
            <div class="new-p--big">
                Nevíme, co máme hledat, žádný dotaz jsme od vás nedostali.
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-8  col-md-6">
        </div>
    </div>

    <!-- otazky? -->
    <div class="row">
        <div class="col-sm-6">
            <div class="searching__questions">
                <div>
                    <div>
                        <a class="link--blue" href="/napoveda">
                            Jak vyhledávat?
                        </a>
                        <br>
                        Pokud si stále nevíte rady, neváhejte se nás na cokoliv
                        <a class="link--blue" href="/texty/kontakt">
                            zeptat.
                        </a>
                    </div>
                </div>
                <img class="searching__questions__icon" src="/Content/img/icon-questions.svg">
            </div>
        </div>
    </div>

</div> return;

            }
            else if (Model.HasResults == false)
            {

<div class="searching container">
    <div class="row" style="margin-top: 10px;">
        <div class="col-xs-1">
            <img style="margin-top:20px; height:30px;width:auto" src="/Content/img/icon-not-found.svg">

        </div>
        <div class="col-xs-11">
            <div class="new-p--big">
                Pro hledaný výraz <span title="@Model.Query" class="emphasized">@Devmasters.TextUtil.ShortenText(Model.Query, 80, "...")</span> jsme bohužel nic nenašli
            </div>
        </div>
    </div>
    @if (Model.IsValid == false)
    {
<div class="row">
    <div class="col-xs-1">
    </div>
    <div class="col-xs-11">
        <div class="alert alert-danger" role="alert">
            Hledaný výraz není správně naformulován a my mu nerozumíme.
        </div>
    </div>
</div>
                    <div class="row">
                        <div class="col-xs-1">
                        </div>
                        <div class="col-xs-11">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h3 class="panel-title">Tipy pro kontrolu dotazu</h3>
                                </div>
                                <div class="panel-body">
                                    <ul>
                                        <li><b>Uvozovky</b> - Zkontrolujte si, zda jste nezapomněli uzavřít uvozovky na konci</li>
                                        <li><b>Závorky</b> - Zkontrolujte si, zda jste nezapomněli uzavřít závorky na konci výrazu</li>
                                        <li><b>Syntaxe</b> - Zkontrolujte si i detaily syntaxe, <a href="/napoveda">nejlépe přímo s nápovědou</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>}
    <!-- otazky? -->
    <div class="row">
        <div class="col-sm-6">
            <div class="searching__questions">
                <div>
                    <div class="new-title new-title--smaller">
                        Nenašli jste, co jste hledali?
                    </div>
                    <div>
                        Zkuste zadat hledaný výraz jiným způsobem.
                        <a class="link--blue" href="/napoveda">
                            Jak vyhledávat?
                        </a>
                        <br>
                        Pokud si stále nevíte rady, neváhejte se nás na cokoliv
                        <a class="link--blue" href="/texty/kontakt">
                            zeptat.
                        </a>
                    </div>
                </div>
                <img class="searching__questions__icon" src="/Content/img/icon-questions.svg">
            </div>
        </div>
    </div>

</div>return;
            }

<div class="row">
    <div class="col-xs-12">
        <div class="new-p new-p--big" style="margin-top: 10px;">
            Pro hledaný výraz <span class="emphasized">@(Devmasters.TextUtil.ShortenText(Model.Query, 60, "..."))</span> @HlidacStatu.Util.RenderData.Vysledky.JsmeNasliVysledky(Model.Total).
            <br />
            @WebUtil.AddWatchDog(this.User, Model.Query, null, $"Hlídat všechny změny výsledků na dotaz <b>{Devmasters.TextUtil.ShortenText(Model.Query, 60, "...")}</b> v celém Hlídači", btnCss: "btn btn-warning btn-sm", prefillWDname: "Změny o " + Devmasters.TextUtil.ShortenText(Model.Query, 60, "..."), showWDList: false, preBtnText: "")
        </div>
    </div>
</div>
<hr />

@{ //debug
                //Model.Smlouvy = null;
                //Model.VZ = null;
                //Model.Insolvence = null;
                //Model.Dotace = null;

                //main content based on number of results

                List<string> paorder = new List<string>();
                if (Model.HasSmlouvy)
                {
                    paorder.Add(Model.Smlouvy.GetType().Name);
                }
                if (Model.HasVZ)
                {
                    if (paorder.Contains(Model.VZ.GetType().Name) == false)
                    {
                        paorder.Add(Model.VZ.GetType().Name);

                        if (Model.HasDotace && Model.Dotace.Total > Model.VZ.Total * 2 && paorder.Contains(Model.Dotace.GetType().Name) == false)
                        {
                            paorder.Insert(paorder.FindIndex(0, m => m == Model.VZ.GetType().Name), Model.Dotace.GetType().Name);
                        }
                        else if (Model.HasInsolvence && Model.Insolvence.Total > Model.VZ.Total * 3 && paorder.Contains(Model.Insolvence.GetType().Name) == false)
                        {
                            paorder.Insert(paorder.FindIndex(0, m => m == Model.VZ.GetType().Name), Model.Insolvence.GetType().Name);
                        }
                    }
                }
                if (Model.HasDotace)
                {
                    if (paorder.Contains(Model.Dotace.GetType().Name) == false)
                    {
                        paorder.Add(Model.Dotace.GetType().Name);

                        if (Model.HasInsolvence && Model.Insolvence.Total > Model.Dotace.Total * 2 && paorder.Contains(Model.Insolvence.GetType().Name) == false)
                        {
                            paorder.Insert(paorder.FindIndex(0, m => m == Model.Dotace.GetType().Name), Model.Insolvence.GetType().Name);
                        }
                    }
                }
                if (Model.HasFirmy)
                {
                    if (paorder.Contains(Model.Firmy.GetType().Name) == false)
                    {
                        paorder.Add(Model.Firmy.GetType().Name);
                    }
                }

                if (Model.HasInsolvence)
                {
                    if (paorder.Contains(Model.Insolvence.GetType().Name) == false)
                    {
                        paorder.Add(Model.Insolvence.GetType().Name);
                    }
                }

                if (paorder.Count < 2)
                {
                    paorder.Add(Model.Osoby.GetType().Name);
                }
                else
                {
                    paorder.Insert(1, Model.Osoby.GetType().Name);
                }
                paorder.Add(Model.Datasets.GetType().Name);


                List<Tuple<string, string>> htmlLinks = new List<Tuple<string, string>>(); }


@*<div class="row">
        <div class="col-xs-12">

            <div class="searching__counters">
                @if (Model.HasSmlouvy)
                {
                    <div class="searching__counter"><a class="link--blue link--big" href="@Url.Action("HledatSmlouvy", "Home", Model.Smlouvy.ToRouteValues(1))">Smlouvy <span class="new-p new-p--gray">@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Smlouvy.ElasticResults.HitsMetadata.Total)</span></a></div>
                }
                @if (Model.HasVZ)
                {
                    <div class="searching__counter"><a class="link--blue link--big" href="@Url.Action("Hledat", "VZ", Model.VZ.ToRouteValues(1))">Veřejné zakázky <span class="new-p new-p--gray">@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.VZ.ElasticResults.HitsMetadata.Total)</span></a></div>
                }
                @if (Model.HasInsolvence)
                {
                    <div class="searching__counter"><a class="link--blue link--big" href="@Url.Action("Hledat", "Insolvence", Model.Insolvence.ToRouteValues(1))">Insolvence <span class="new-p new-p--gray">@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Insolvence.ElasticResults.HitsMetadata.Total)</span></a></div>
                }
                @if (Model.HasOsoby)
                {
                    <div class="searching__counter"><a class="link--blue link--big" href="@Url.Action("Hledat", "Osoby", Model.Osoby.ToRouteValues(1))">Osoby <span class="new-p new-p--gray">@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Osoby.Total)</span></a></div>
                }
                @if (Model.HasFirmy)
                {
                    <div class="searching__counter"><a class="link--blue link--big" href="@Url.Action("HledatFirmy", "Home", new { q = Model.Firmy.Query })">Firmy <span class="new-p new-p--gray">@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Firmy.Total)</span></a></div>
                }
                @if (Model.HasDotace)
                {
                    <div class="searching__counter"><a class="link--blue link--big" href="@Url.Action("Hledat", "Dotace", Model.Dotace.ToRouteValues(1))">Dotace <span class="new-p new-p--gray">@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Dotace.Total)</span></a></div>
                }
                @if (Model.Datasets.HasResult)
                {
                    <div class="searching__counter"><a class="link--blue link--big" href="#databaze">Další výsledky <span class="new-p new-p--gray">@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Datasets.Total) najdete v pravém sloupci</span></a></div>
                }
            </div>
        </div>
    </div>*@



@* BOXES *@
@for (int ipart = 1; ipart < paorder.Count; ipart++)
{
    var part = paorder[ipart];

    if (part == Model.VZ.GetType().Name)
    {
        if (Model.HasVZ)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("Hledat", "VZ", Model.VZ.ToRouteValues(1)), Devmasters.Lang.Plural.Get(Model.VZ.Total, "<b>jednu veřejnou zakázku</b>", "<b>{0} veřejné zakázky</b>", "<b>{0} veřejných zakázek</b>")));
        }
    }
    else if (part == Model.Dotace.GetType().Name)
    {
        if (Model.HasDotace)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("Hledat", "Dotace", Model.Dotace.ToRouteValues(1)), Devmasters.Lang.Plural.Get(Model.Dotace.Total, "<b>jednu dotaci</b>", "<b>{0} dotace</b>", "<b>{0} dotací</b>")));
        }
    }
    else if (part == Model.Insolvence.GetType().Name)
    {
        if (Model.HasInsolvence)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("Hledat", "Insolvence", Model.Dotace.ToRouteValues(1)), Devmasters.Lang.Plural.Get(Model.Insolvence.Total, "<b>jednu insolvenci</b>", "<b>{0} insolvence</b>", "<b>{0} insolvencí</b>")));
        }
    }
    else if (part == Model.Osoby.GetType().Name)
    {
        if (Model.HasOsoby)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("Hledat", "Osoby", Model.Osoby.ToRouteValues(1)), Devmasters.Lang.Plural.Get(Model.Osoby.Total, "<b>jednu osobu</b>", "<b>{0} osoby</b>", "<b>{0} osob</b>")));
        }
    }
    else if (part == Model.Firmy.GetType().Name)
    {
        if (Model.HasFirmy)
        {
            htmlLinks.Add(new Tuple<string, string>(Url.Action("HledatFirmy", "Home", new { q = Model.Firmy.Query }), Devmasters.Lang.Plural.Get(Model.Firmy.Total, "<b>jednu firmu</b>", "<b>{0} firmy</b>", "<b>{0} firem</b>")));
        }
    }
    else if (part == Model.Datasets.GetType().Name)
    {
        if (Model.HasDatasets)
        {
            foreach (var ds in Model.Datasets.Results
               .Where(m => m.Total > 0)
               .OrderByDescending(m => m.Total))
            {
                htmlLinks.Add(new Tuple<string, string>(ds.DataSet.DatasetSearchUrl(ds.Q), ds.Total + "&nbsp;v&nbsp;" + Devmasters.TextUtil.ShortenText(ds.DataSet.Registration().name, 28)));
            }

        }
    }
    else
    { }

} @*for*@

@if (htmlLinks.Count > 0)
{
<div class="row">
    <div class="col-xs-12 col-sm-12">

        <h4><span title="@Model.Query" class="emphasized">@Devmasters.TextUtil.ShortenText(Model.Query, 80, "...")</span> jsme nalezli ještě v těchto databázích</h4>
        @foreach (var items in htmlLinks.Chunk((htmlLinks.Count / 3) + 1))
        {
<div class="col-xs-6 col-sm-3">
    <ul>
        @foreach (var item in items)
        {
<li><a href="@item.Item1"><i class="far fa-angle-double-right"></i>&nbsp;@Html.Raw(item.Item2)</a></li>}
    </ul>
</div>}
    </div>
</div>
                <hr />}


<div class="row">
    <div class="col-xs-12 col-sm-12">

        @*MAIN RESULT*@
        @if (paorder.Count > 0)
        {
            var part = paorder[0];
            if (part == Model.Smlouvy.GetType().Name)
            {
                if (Model.HasSmlouvy)
                {
                    Devmasters.DT.StopWatchEx sw = new Devmasters.DT.StopWatchEx();
                    sw.Start();
@RenderSmlouvy(numOfSmluv) sw.Stop();
                        viewRenderTimes.Add("smlouvy", sw.Elapsed);
                    }

                }
                else if (part == Model.VZ.GetType().Name)
                {
                    if (Model.HasVZ)
                    {
                        Devmasters.DT.StopWatchEx sw = new Devmasters.DT.StopWatchEx();
                        sw.Start();
@RenderVZ(numOfVZ) sw.Stop();
                        viewRenderTimes.Add("VZ", sw.Elapsed);
                    }
                }
                else if (part == Model.Dotace.GetType().Name)
                {
                    if (Model.HasDotace)
                    {
                        Devmasters.DT.StopWatchEx sw = new Devmasters.DT.StopWatchEx();
                        sw.Start();
@RenderDotace(numOfDotaci) sw.Stop();
                        viewRenderTimes.Add("Dotace", sw.Elapsed);

                    }
                }
                else if (part == Model.Insolvence.GetType().Name)
                {
                    if (Model.HasInsolvence)
                    {
                        Devmasters.DT.StopWatchEx sw = new Devmasters.DT.StopWatchEx();
                        sw.Start();
@RenderInsolvence(numOfInsolvenci) sw.Stop();
                        viewRenderTimes.Add("Insolvence", sw.Elapsed);


                    }
                }
                else if (part == Model.Osoby.GetType().Name)
                {
                    if (Model.HasOsoby)
                    {
                        Devmasters.DT.StopWatchEx sw = new Devmasters.DT.StopWatchEx();
                        sw.Start();

@RenderOsoby(numOfOsob) sw.Stop();
                        viewRenderTimes.Add("Osoby", sw.Elapsed);

                    }
                }
                else if (part == Model.Firmy.GetType().Name)
                {
                    if (Model.HasFirmy)
                    {
                        Devmasters.DT.StopWatchEx sw = new Devmasters.DT.StopWatchEx();
                        sw.Start();
@RenderFirmy(numOfFirem) sw.Stop();
                        viewRenderTimes.Add("Firmy", sw.Elapsed);
                    }
                }
                else if (part == Model.Datasets.GetType().Name)
                {
                    if (Model.HasDatasets)
                    {
                        Devmasters.DT.StopWatchEx sw = new Devmasters.DT.StopWatchEx();
                        sw.Start();
@RenderDatasets(1) sw.Stop();
                        viewRenderTimes.Add("Datasets", sw.Elapsed);

                    }
                }
                else
                { }

                if (htmlLinks.Count > 0)
                {
<hr style="margin-top:30px;" />
                    <h3><span title="@Model.Query" class="emphasized">@Devmasters.TextUtil.ShortenText(Model.Query, 80, "...")</span> jsme nalezli ještě v těchto databázích</h3> foreach (var items in htmlLinks.Chunk((htmlLinks.Count / 3) + 1))
                                        {
                    <div class="col-xs-6 col-sm-3">
                        <ul>
                            @foreach (var item in items)
                            {
    <li><a href="@item.Item1"><i class="far fa-angle-double-right"></i>&nbsp;@Html.Raw(item.Item2)</a></li>}
                        </ul>
                    </div>}
                                    }

                                }

    </div>
</div>
<script type='text/javascript'>$(document).ready(function () {
        $('#midcol').height($('#rightcol').height());
    });</script>







<!--
    searchtimes: @Html.Raw(string.Join("\n", Model.SearchTimes().Select(kv=>kv.Key + ": " + kv.Value.TotalMilliseconds + "ms")))
-->
<!--
    viewrendertimes: @Html.Raw(string.Join("\n", viewRenderTimes.Select(kv=>kv.Key + ": " + kv.Value.TotalMilliseconds + "ms")))
-->


@helper RenderOsoby(int numOfOsob)
{
    string osobaStatDescription = "";
    HlidacStatu.Lib.Data.Osoba osoba1 = Model.Osoby.Results.FirstOrDefault();
    if (osoba1 == null)
    {
        return;
    }

    var alldata = osoba1.AktualniVazby(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny);

    var data = osoba1.AktualniVazby(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny)
        .Where(v => !string.IsNullOrEmpty(v.To.Id))
        .GroupBy(f => f.To.Id, v => v, (ico, v) => new
        {
            ICO = ico,
            //FirmaName = v.First().To?.PrintName(),//HlidacStatu.Lib.Data.External.FirmyDB.NameFromIco(ico, true),
            //VazbyPerIco = osoba.VazbyProICO(ico),
            stat = Firmy.Get(ico).StatistikaRegistruSmluv()
        })
        .OrderByDescending(m => m.stat.Summary().CelkovaHodnotaSmluv).ThenBy(m => m.ICO)
        .ToArray();

    var osobaStatDescTotalKc = HlidacStatu.Lib.Data.Smlouva.NicePrice(data.Sum(d => d.stat.Summary().CelkovaHodnotaSmluv), html: true, shortFormat: true);
    osobaStatDescription = string.Format("{0}{1}",
        Devmasters.Lang.Plural.GetWithZero((int)alldata.Count(), "Žádná vazba na firmy", "Celkem vazba na <b>{0} firmu</b>", "Celkem vazba na <b>{0} firmy</b>", "Celkem vazba na <b>{0} firem</b>"),
        Devmasters.Lang.Plural.GetWithZero((int)data.Sum(d => d.stat.Summary().PocetSmluv), "."
            , ", <b>{0} smlouva</b> v registru smluv za <b>" + osobaStatDescTotalKc + "</b>"
            , ";, <b>{0} smlouvy</b> v registru smluv za <b>" + osobaStatDescTotalKc + "</b>"
            , ";, <b>{0} smluv</b> v registru smluv za <b>" + osobaStatDescTotalKc) + "</b>"
    );
    var funkceOsoba = osoba1.Description(true, e => true, numOfRecords: 2);
    string box1Css = "col-sm-4 col-md-3";
    string box2Css = "col-sm-8 col-md-9";
    if (numOfOsob == 0)
    {
        box1Css = "col-sm-12";
        box2Css = "col-sm-12";
    }


    <div class="row" id="osoby">
        <div class="col-xs-12">
            <div class="searching__watcher">
                <div class="watcher__title">
                    <h3>
                        Nalezené osoby
                        <small>@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Osoby.Total)</small>
                    </h3>
                </div>
            </div>
        </div>
    </div> <!-- big result -->

    <div class="row">
        <div class="@box1Css">
            <div class="person-profile-thumb">
                <a href="@osoba1.GetUrl(true)">
                    <div class="profile-picture" style="background-image: url('@osoba1.GetPhotoUrl(true)')">
                    </div>
                </a>
                <div>
                    <a class="section-title link--blue" href="@osoba1.GetUrl(true)">
                        @osoba1.FullName()
                    </a>
                    <div class="new-p new-p--gray new-p--small">
                        @osoba1.NarozeniYear()
                    </div>
                    <div class="new-p new-p--gray new-p--small">
                        @osoba1.StatusOsoby().ToNiceDisplayName()
                    </div>
                </div>
            </div>
        </div>
        <div class="@box2Css">

            @if (!string.IsNullOrWhiteSpace(funkceOsoba))
            {
                <div class="search-result-label">
                    Funkce
                </div>
                <div class="new-p">
                    @Html.Raw(funkceOsoba)
                </div>
            }
            @if (false && osoba1.Sponzoring().Count() > 0)
            {
                <div class="search-result-label">
                    Podpora politických stran
                </div>
                <div class="new-p">
                    @Html.Raw(osoba1.SponzoringToHtml(5))
                </div>
            }
            <div class="search-result-label">
                Angažovanost
            </div>
            <div class="new-p">
                @Html.Raw(osobaStatDescription)
            </div>
                                            
        </div>
    </div> 
    if (Model.Osoby.Total > 1)
    {
        if (numOfOsob > 1)
        {
            <div class="row" id="osoba" style="margin-top:40px;">
                <div class="col-xs-12">

                    <table class="table table-hover">
                        <thead>
                            @SearchResults.OsobaHead()
                        </thead>
                        <tbody>
                            @foreach (var hit in Model.Osoby.Results.Skip(1).Take(numOfOsob - 1))
                            {
                                @SearchResults.OsobaRow(this.User, this.Request, hit)
                            }
                        </tbody>
                    </table>

                </div>
            </div> 
        }

        if (Model.Osoby.Total > numOfOsob)
        {

            <div style="height: 32px"></div>
            <div class="row">
                <div class="col-xs-12">
                    <a href="/Osoby/hledat?Q=@Url.Encode(Model.Query)&ftx=@Model.OsobaFtx.ToString()" style="font-size:18px">
                        @Devmasters.Lang.Plural.Get(Model.Osoby.Total, "", "Ukázat všechny {0} nalezené osoby", "Ukázat všech {0} nalezených osob") ukázat&nbsp;<i class="far fa-angle-double-right"></i>
                    </a>
                </div>
            </div> 
        }
    } <!-- end big result -->
}

@helper RenderVZ(int numOfVZ)
{if (numOfVZ == 0)
                    {

    <hr />
                        <h4>
                            Našli jsme
                            @Html.Raw(Devmasters.Lang.Plural.Get(Model.VZ.Total,
                                         "ještě <b>jednu veřejnou zakázku</b>",
                                         "celkem <b>{0} veřejné zakázky</b>",
                                         "celkem <b>{0} veřejných zakázek</b>"))
                            <span style="padding-left:10px;">
                                <a href="@Url.Action("Hledat", "VZ", Model.VZ.ToRouteValues(1))">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                            </span>
                        </h4> return;
                                        }

                                        //Model.VZ = HlidacStatu.Lib.Data.VZ.VerejnaZakazka.Searching.SimpleSearch(Model.Query, null,
                                        //    1, new HlidacStatu.Lib.Searching.VerejnaZakazkaSearchData().DefaultPageSize(),
                                        //    (int)HlidacStatu.Lib.Searching.VerejnaZakazkaSearchData.VZOrderResult.Relevance);
                                        var zakazkyTop = Model.VZ.ElasticResults.Hits
                                        .Select(m => m.Source)
                                        .Where(m => !string.IsNullOrEmpty(m.NazevZakazky?.Trim())
                                                    && !string.IsNullOrEmpty(m.PopisZakazky?.Trim())
                                                )
                                        .Take(numOfVZ);
                                        if (zakazkyTop.Count() < numOfVZ)
                                        {
                                            zakazkyTop = zakazkyTop.Union(
                                                Model.VZ.ElasticResults.Hits.Select(m => m.Source)
                                                )
                                                .Take(numOfVZ);
                                        }
                                        Model.VZ.SmallRender = true;
                                        Model.VZ.ShowWatchdog = false;


                        <div class="row" id="verejnezakazky">
                            <div class="col-xs-12">
                                @Html.Partial("../VZ/_SearchResult", Model.VZ)

                            </div>
                        </div>



}

@helper RenderDotace(int numOfDotaci)
{if (numOfDotaci == 0)
                    {
    <hr />
                        <h4>
                            Našli jsme
                            @Html.Raw(Devmasters.Lang.Plural.Get(Model.Dotace.Total,
                                  "ještě <b>jednu dotaci</b>",
                                  "celkem <b>{0} dotace</b>",
                                  "celkem <b>{0} dotací</b>"))
                            <span style="padding-left:10px;">
                                <a href="@Url.Action("Hledat", "Dotace", Model.Dotace.ToRouteValues(1))">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                            </span>
                        </h4> return;
                                        }
                                        Model.Dotace.ShowWatchdog = false;
                                        Model.Dotace.SmallRender = true;
                        <div class="row" id="dotace">
                            <div class="col-xs-12">
                                @Html.Partial("../Dotace/_SearchResult", Model.Dotace)
                            </div>
                        </div>

}

@helper RenderInsolvence(int numOfInsolvenci)
{if (numOfInsolvenci == 0)
                    {
    <hr />
                        <h4>
                            Našli jsme
                            @Html.Raw(Devmasters.Lang.Plural.Get(Model.Insolvence.Total,
                                         "ještě <b>jednu insolvenci</b>",
                                         "celkem <b>{0} insolvence</b>",
                                         "celkem <b>{0} insolvencí</b>"))
                            <span style="padding-left:10px;">
                                <a href="@Url.Action("Hledat", "Insolvence", Model.Insolvence.ToRouteValues(1))">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                            </span>
                        </h4> return;
                                        }
                                        Model.Insolvence.ShowWatchdog = false;
                                        Model.Insolvence.SmallRender = true;
                        <div class="row" id="insolvence">
                            <div class="col-xs-12">

                                @Html.Partial("../Insolvence/_SearchResult", Model.Insolvence)

                            </div>
                        </div>
}

@helper RenderDatasets(int numOfDSrecords)
{if (numOfDSrecords == 0)
                    {
    <hr />
                        <h4>
                            V dalších databázích jsme našli
                            @Html.Raw(Devmasters.Lang.Plural.Get(Model.Datasets.Total,
                                         "ještě <b>jeden výsledek</b>",
                                         "celkem <b>{0} výsledky</b>",
                                         "celkem <b>{0} výsledků</b>"))
                        </h4>
                                            <div class="row" id="databaze">
                                                <div class="col-xs-12">
                                                    <ul style="padding:0">
                                                        @foreach (var ds in Model.Datasets.Results.Where(m => m.Total > 0).OrderByDescending(m => m.Total))
                                                        {
                                    <li style="padding-bottom:5px;margin-bottom:5px;border-bottom:1px #eee dashed">
                                        @(ds.DataSet.Registration().name)&nbsp;<a href="@(ds.DataSet.DatasetSearchUrl(ds.Q))">@(HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(ds.Total))&nbsp;<i class="far fa-angle-double-right"></i></a>
                                    </li>                    }
                                                    </ul>

                                                </div>
                                            </div> return;
                                                            }
                                            <div id="databaze" class="row">
                                                <div class="col-xs-12">
                                                    <div class="searching__watcher">
                                                        <div class="watcher__title">
                                                            <h3>
                                                                Nalezené výsledky v dalších databázích
                                                                <small>@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Datasets.Total, HlidacStatu.Util.RenderData.CapitalizationStyle.FirstLetterUpperCap)</small>
                                                            </h3>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                                            <div class="row">
                                                                @{ var tabs = Model.Datasets.Results.Where(m => m.Total > 0).OrderByDescending(m => m.Total)
                                                                                            .Select(m => $"{m.DataSet.Registration().name}&nbsp;({HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(m.Total)})");
                                                                                    List<string> results = new List<string>();

                                                                                    foreach (var rds in Model.Datasets.Results
                                                                                       .Where(m => m.Total > 0)
                                                                                       .OrderByDescending(m => m.Total))
                                                                                    {
                                                                                        results.Add(rds.RenderResultsInHtml(Model.Query));
                                                                                    } }
                                                                @WebUtil.VerticalTabs(tabs, results)
                                                            </div>

}

@helper RenderFirmy(int numOfFirem)
{if (numOfFirem == 0)
                    {
    <hr />
                        <h4>
                            Našli jsme
                            @Html.Raw(Devmasters.Lang.Plural.Get(Model.Firmy.Total,
                                         "ještě <b>jednu firmu</b>",
                                         "celkem <b>{0} firmy</b>",
                                         "celkem <b>{0} firem</b>"))
                            <span style="padding-left:10px;">
                                <a href="@Url.Action("HledatFirmy", "Home", new { q = Model.Query })">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                            </span>
                        </h4> return;
                                        }


                        <div class="row" id="firmy">
                            <div class="col-xs-12">
                                <div class="searching__watcher">
                                    <div class="watcher__title">
                                        <h3>
                                            Nalezené firmy
                                            <small>@HlidacStatu.Util.RenderData.Vysledky.PocetVysledku(Model.Firmy.Total, HlidacStatu.Util.RenderData.CapitalizationStyle.FirstLetterUpperCap)</small>
                                        </h3>
                                    </div>
                                </div>
                            </div>
                        </div>

                                        <h4>Nejvíce relevantní nalezené firmy</h4>
                                                        <div class="row" style="">
                                                            <table class="table table-hover">
                                                                @SearchResults.FirmyHead(false)
                                                                <tbody>

                                                                    @foreach (var f in Model.Firmy.Result)
                                                                    {
                                                                        if (f.Valid)
                                                                        {
                                                    @SearchResults.FirmyRow(this.User, f, false)                    }
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        </div>

}

@helper RenderSmlouvy(int numOfSmluv)
{if (numOfSmluv == 0)
                    {
    <hr />
                        <h4>
                            Našli jsme
                            @Html.Raw(Devmasters.Lang.Plural.Get(Model.Smlouvy.Total,
                                         "ještě <b>jednu smlouvu</b>",
                                         "celkem <b>{0} smlouvy</b>",
                                         "celkem <b>{0} smluv</b>"))
                            <span style="padding-left:10px;">
                                <a href="@Url.Action("HledatSmlouvy", "Home", Model.Smlouvy.ToRouteValues(1))">ukázat&nbsp;<i class="far fa-angle-double-right"></i></a>
                            </span>
                        </h4> return;
                                        }
                                        //Model.Smlouvy = HlidacStatu.Lib.Data.Smlouva.Search.SimpleSearch(Model.Query, 1, new SmlouvaSearchResult().DefaultPageSize(),
                                        //        Smlouva.Search.OrderResult.Relevance,
                                        //        anyAggregation: new Nest.AggregationContainerDescriptor<HlidacStatu.Lib.Data.Smlouva>().Sum("sumKc", m => m.Field(f => f.CalculatedPriceWithVATinCZK))
                                        //        );
                                        Model.Smlouvy.SmallRender = true;
                                        Model.Smlouvy.ShowWatchdog = false;
                        <div id="smlouvy" class="row">
                            <div class="col-xs-12">

                                @Html.Partial("_SearchResult", Model.Smlouvy)
                            </div>
                        </div>

}
