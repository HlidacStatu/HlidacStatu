@model List<HlidacStatu.Lib.Analysis.KorupcniRiziko.KIndexData>
@using System
@using System.Collections.Generic
@using System.Linq

@using HlidacStatu.Util
@using HlidacStatu.Lib.Analysis.KorupcniRiziko

@section scripts
{
    <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.js"></script>
    @Scripts.Render("~/bundles/highcharts")
}
@section breadcrumb
{
    <ol class="breadcrumb">
        <li><a href="/">Hlídač Státu</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
}

@if (Model.Count() == 0)
{
    <div class="jumbotron">
        <h1>K-Index</h1>
        <p>Indexy korupčního rizika nebyly pro tyto subjekty dosud spočítány</p>
    </div>
    return;
}

@{
    int fromY = Model.First().roky.Min(m => m.Rok);
    int toY = Model.First().roky.Max(m => m.Rok);
    int rok = HlidacStatu.Util.ParseTools.ToInt(Request.QueryString["rok"]) ?? toY;
    if (rok < fromY)
    {
        rok = fromY;
    }
    if (rok > toY)
    {
        rok = toY;
    }

    HlidacStatu.Util.Graphics.Gradient gradIndex = new HlidacStatu.Util.Graphics.Gradient(
        new HlidacStatu.Util.Graphics.RGB("00b300") //10%
        , new HlidacStatu.Util.Graphics.RGB("FFA500") //20%
        , new HlidacStatu.Util.Graphics.RGB("FF0000") //30%
        , new HlidacStatu.Util.Graphics.RGB("FF0000")
        , new HlidacStatu.Util.Graphics.RGB("FF0000") //50%
        , new HlidacStatu.Util.Graphics.RGB("FF0000")
        , new HlidacStatu.Util.Graphics.RGB("FF0000")
        , new HlidacStatu.Util.Graphics.RGB("FF0000")
        , new HlidacStatu.Util.Graphics.RGB("FF0000") //90%
        , new HlidacStatu.Util.Graphics.RGB("FF0000")
    );

}


<div class="jumbotron">
    <h1>K-Index pro @rok</h1>
    <p>
        Porovnání indexu korupčního rizika pro <b>
            @(Model.Select(m => HlidacStatu.Lib.Data.Firmy.Get(m.Ico).Jmeno).Aggregate((f, s) => f + ", " + s))
        </b>
    </p>
</div>

<h2>
    K-Index pro rok
    @for (int i = fromY; i <= toY; i++)
    {
        if (i == rok)
        {
            <span>&nbsp;&nbsp;@i</span>
        }
        else
        {
            <span>&nbsp;&nbsp;<a href="/KIndex/porovnat?ico=@(Model.Select(m => m.Ico).Aggregate((f, s) => f + "," + s))&rok=@i">@i</a></span>
        }
    }
</h2>


@{
    HlidacStatu.Util.Graphics.Gradient grad = new HlidacStatu.Util.Graphics.Gradient(
            new HlidacStatu.Util.Graphics.RGB("00b300")
            , new HlidacStatu.Util.Graphics.RGB("FFA500")
            , new HlidacStatu.Util.Graphics.RGB("FF0000")
        );
    decimal min = 0;
    decimal max = 0;
    decimal val = 0;

    var xx = grad.Color(25, 20, 40);
}
<div class="row">
    <div class="col-xs-12">
        <table class="table table-new table-new--dotted table-hover" id="invalidItemWarn">
            <tbody>
                <tr>
                    <td>
                        Subjekt
                    </td>
                    @foreach (var ki in Model)
                    {
                        <td>
                            <b>@HlidacStatu.Lib.Data.Firmy.Get(ki.Ico).Jmeno</b>
                            <a href="/kindex/@ki.Ico"><i class="fas fa-chart-line"></i></a>
                            <br/>@ki.Ico
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        K-Index hodnota
                    </td>
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).KIndex.Value;
                        <td>
                            <span style="color:black">
                                @HlidacStatu.Util.RenderData.NiceNumber(val)
                            </span>
                        </td>
                    }
                </tr>
                <!--
    <tr>
        <td>
            Druh účetní jednotky
        </td>
        @foreach (var ki in Model)
        {
            <td>
                <b>@ki.UcetniJednotka.DruhUcetniJednotkyPopis()</b>
            </td>
        }
    </tr>
    <tr>
        <td>
            Forma účetní jednotky
        </td>
        @foreach (var ki in Model)
        {
            <td>
                <b>@ki.UcetniJednotka.FormaUcetniJednotkyPopis()</b>
            </td>
        }
    </tr>
    <tr>
        <td>
            Institucionální sektor
        </td>
        @foreach (var ki in Model)
        {
            <td>
                <b>@ki.UcetniJednotka.InstitucionalniSektorPopis()</b>
            </td>
        }
    </tr>
        -->
                <tr>
                    <td>
                        Celkový počet smluv
                    </td>
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).Smlouvy.Pocet;
                        <td>
                            <span style="color:black">
                                @HlidacStatu.Util.RenderData.NiceNumber(val)
                            </span>
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Celková hodnota smluv
                    </td>
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).Smlouvy.CelkemCena;
                        <td>
                            <span style="color:black">
                                @HlidacStatu.Util.RenderData.NicePrice(val, shortFormat: true)
                            </span>
                        </td>
                    }
                </tr>

                <tr>
                    <td>
                        Počet smluv bez<br />uvedené ceny
                    </td>
                    @{
                        min = Model.Min(m => m.ForYear(rok).Statistika.NumBezCeny);
                        max = Model.Max(m => m.ForYear(rok).Statistika.NumBezCeny);
                    }
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).Statistika.NumBezCeny;
                        <td>
                            <span style="color:@(grad.Color(val,min,max).ToHex())">
                                @HlidacStatu.Util.RenderData.NiceNumber(val)
                            </span>
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        % smluv bez<br />uvedené ceny
                    </td>
                    @{
                        min = Model.Min(m => m.ForYear(rok).Statistika.PercentBezCeny);
                        max = Model.Max(m => m.ForYear(rok).Statistika.PercentBezCeny);
                    }
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).Statistika.PercentBezCeny;
                        <td>
                            <span style="color:@(grad.Color(val,min,max).ToHex())">
                                @HlidacStatu.Util.RenderData.NicePercent(val)
                            </span>
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        % smluv s firmou<br />navázanou na politiky
                    </td>
                    @{
                        min = Model.Min(m => m.ForYear(rok).Statistika.PercentSPolitiky);
                        max = Model.Max(m => m.ForYear(rok).Statistika.PercentSPolitiky);
                    }
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).Statistika.PercentSPolitiky;
                        <td>
                            <span style="color:@(grad.Color(val,min,max).ToHex())">
                                @HlidacStatu.Util.RenderData.NicePercent(val)
                            </span>
                        </td>
                    }
                </tr>

                <tr>
                    <td>
                        % smluv s nově<br />založenými firmami
                    </td>
                    @{
                        min = Model.Min(m => m.ForYear(rok).PercNovaFirmaDodavatel);
                        max = Model.Max(m => m.ForYear(rok).PercNovaFirmaDodavatel);
                    }
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).PercNovaFirmaDodavatel;
                        <td>
                            <span style="color:@(grad.Color(val,min,max).ToHex())">
                                @HlidacStatu.Util.RenderData.NicePercent(val)
                            </span>
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        % smluv se<br />zásadním nedostatkem
                    </td>
                    @{
                        min = Model.Min(m => m.ForYear(rok).PercSeZasadnimNedostatkem);
                        max = Model.Max(m => m.ForYear(rok).PercSeZasadnimNedostatkem);
                    }
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).PercSeZasadnimNedostatkem;
                        <td>
                            <span style="color:@(grad.Color(val,min,max).ToHex())">
                                @HlidacStatu.Util.RenderData.NicePercent(val)
                            </span>
                        </td>
                    }

                </tr>
                <tr>
                    <td>
                        % smluv s firmami<br />s vazbou na politiky
                    </td>
                    @{
                        min = Model.Min(m => m.ForYear(rok).PercSmlouvySPolitickyAngazovanouFirmou);
                        max = Model.Max(m => m.ForYear(rok).PercSmlouvySPolitickyAngazovanouFirmou);
                    }
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).PercSmlouvySPolitickyAngazovanouFirmou;
                        <td>
                            <span style="color:@(grad.Color(val,min,max).ToHex())">
                                @HlidacStatu.Util.RenderData.NicePercent(val)
                            </span>
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        % smluv s cenou<br />u limitu VZ
                    </td>
                    @{
                        min = Model.Min(m => m.ForYear(rok).PercSmluvUlimitu);
                        max = Model.Max(m => m.ForYear(rok).PercSmluvUlimitu);
                    }
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).PercSmluvUlimitu;
                        <td>
                            <span style="color:@(grad.Color(val,min,max).ToHex())">
                                @HlidacStatu.Util.RenderData.NicePercent(val)
                            </span>
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        % smluv uzavřených<br />o víkendu
                    </td>
                    @{
                        min = Model.Min(m => m.ForYear(rok).PercUzavrenoOVikendu);
                        max = Model.Max(m => m.ForYear(rok).PercUzavrenoOVikendu);
                    }
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).PercUzavrenoOVikendu;
                        <td>
                            <span style="color:@(grad.Color(val,min,max).ToHex())">
                                @HlidacStatu.Util.RenderData.NicePercent(val)
                            </span>
                        </td>
                    }
                </tr>

                <tr>
                    <td>
                        Koncentrace dodavatelů
                        <br />&nbsp;&nbsp;&nbsp;Herfindahl_Hirschman
                        <br />&nbsp;&nbsp;&nbsp;Herfindahl_Hirschman_Modified
                        <br />&nbsp;&nbsp;&nbsp;Kwoka_Dominance_Index
                    </td>
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).CelkovaKoncentraceDodavatelu.Herfindahl_Hirschman_Index;
                        <td>
                            <span style="color:@(gradIndex.Color(val).ToHex())">
                                <br />@HlidacStatu.Util.RenderData.NicePercent(val)
                            </span>
                            <span style="color:@(gradIndex.Color(val).ToHex())">
                                <br />@HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).CelkovaKoncentraceDodavatelu.Herfindahl_Hirschman_Modified)
                            </span>
                            <span style="color:@(gradIndex.Color(val).ToHex())">
                                <br />@HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).CelkovaKoncentraceDodavatelu.Kwoka_Dominance_Index)
                            </span>
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Koncentrace dodavatelů<br />bez uvedené ceny
                        <br />&nbsp;&nbsp;&nbsp;Herfindahl_Hirschman
                        <br />&nbsp;&nbsp;&nbsp;Herfindahl_Hirschman_Modified
                        <br />&nbsp;&nbsp;&nbsp;Kwoka_Dominance_Index
                    </td>
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).KoncentraceDodavateluBezUvedeneCeny?.Herfindahl_Hirschman_Index ?? 0;
                        <td>
                            @if (ki.ForYear(rok).KoncentraceDodavateluBezUvedeneCeny != null)
                            {
                                <span>
                                    @(ki.ForYear(rok).KoncentraceDodavateluBezUvedeneCeny.PocetSmluv)/@(ki.ForYear(rok).KoncentraceDodavateluBezUvedeneCeny.PocetSmluvBezCeny)/
                                    za @HlidacStatu.Util.RenderData.ShortNicePrice(ki.ForYear(rok).KoncentraceDodavateluBezUvedeneCeny.CelkovaHodnotaSmluv)
                                </span>
                                <span style="color:@(gradIndex.Color(val).ToHex())">
                                    <br />@HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).KoncentraceDodavateluBezUvedeneCeny.Herfindahl_Hirschman_Index)
                                </span>
                                <span style="color:@(gradIndex.Color(val).ToHex())">
                                    <br />@HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).KoncentraceDodavateluBezUvedeneCeny.Herfindahl_Hirschman_Modified)
                                </span>
                                <span style="color:@(gradIndex.Color(val).ToHex())">
                                    <br />@HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).KoncentraceDodavateluBezUvedeneCeny.Kwoka_Dominance_Index)
                                </span>
                            }
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Koncentrace dodavatelů<br />cenu u limitů VZ
                        <br />&nbsp;&nbsp;&nbsp;Herfindahl_Hirschman
                        <br />&nbsp;&nbsp;&nbsp;Herfindahl_Hirschman_Modified
                        <br />&nbsp;&nbsp;&nbsp;Kwoka_Dominance_Index
                    </td>
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).KoncentraceDodavateluCenyULimitu?.Herfindahl_Hirschman_Index ?? 0;
                        <td>
                            @if (ki.ForYear(rok).KoncentraceDodavateluCenyULimitu != null)
                            {
                                <span>
                                    @(ki.ForYear(rok).KoncentraceDodavateluCenyULimitu.PocetSmluv)/@(ki.ForYear(rok).KoncentraceDodavateluCenyULimitu.PocetSmluvBezCeny)/
                                    za @HlidacStatu.Util.RenderData.ShortNicePrice(ki.ForYear(rok).KoncentraceDodavateluCenyULimitu.CelkovaHodnotaSmluv)
                                </span>
                                <span style="color:@(gradIndex.Color(val).ToHex())">
                                    <br />@HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).KoncentraceDodavateluCenyULimitu.Herfindahl_Hirschman_Index)
                                </span>
                                <span style="color:@(gradIndex.Color(val).ToHex())">
                                    <br />@HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).KoncentraceDodavateluCenyULimitu.Herfindahl_Hirschman_Modified)
                                </span>
                                <span style="color:@(gradIndex.Color(val).ToHex())">
                                    <br />@HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).KoncentraceDodavateluCenyULimitu.Kwoka_Dominance_Index)
                                </span>
                            }
                        </td>
                    }
                </tr>
                <tr>
                    <td colspan="@(Model.Count +1)">
                        Koncentrace dodavatelů podle oborů
                        &nbsp;&nbsp;&nbsp;Herfindahl_Hirschman /
                        Herfindahl_Hirschman_Modified /
                        Kwoka_Dominance_Index
                    </td>
                </tr>
                <tr>
                    <td>
                        &nbsp;
                    </td>
                    @foreach (var ki in Model)
                    {
                        <td>
                            <b>@HlidacStatu.Lib.Data.Firmy.Get(ki.Ico).Jmeno</b>
                        </td>
                    }
                </tr>
                @foreach (var cl in HlidacStatu.Lib.Data.Smlouva.SClassification.AllTypes.Where(m => m.MainType))
                {
                    <tr>
                        <td style="text-align:right">
                            <b>@(cl.SearchShortcut)</b>
                        </td>
                        @foreach (var ki in Model)
                        {
                            <td style="min-width:150px;border-left:dotted 2px #E0E6ED">
                                <p>
                                    @if (ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value) != null)
                                    {
                                        <span style="color:@(gradIndex.Color(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value)?.Koncentrace?.Herfindahl_Hirschman_Index).ToHex())">
                                            @HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value)?.Koncentrace?.Herfindahl_Hirschman_Index, 0)
                                        </span> @("/")
                                        <span style="color:@(gradIndex.Color(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value)?.Koncentrace?.Herfindahl_Hirschman_Modified).ToHex())">
                                            @HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value)?.Koncentrace?.Herfindahl_Hirschman_Modified, 0)
                                        </span> @("/")
                                        <span style="color:@(gradIndex.Color(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value)?.Koncentrace?.Kwoka_Dominance_Index).ToHex())">
                                            @HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value)?.Koncentrace?.Kwoka_Dominance_Index, 0)
                                        </span>
                                        <span>
                                            <br />
                                            @HlidacStatu.Util.RenderData.ShortNicePrice(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value).Koncentrace.CelkovaHodnotaSmluv),
                                            @HlidacStatu.Util.RenderData.NiceNumber(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value).Koncentrace.PocetSmluv) smluv,
                                            @HlidacStatu.Util.RenderData.NiceNumber(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value).Koncentrace.PocetSmluvBezCeny) bez ceny
                                        </span>
                                        <span><a href="/HledatSmlouvy?q=@System.Net.WebUtility.UrlEncode(ki.ForYear(rok).KoncetraceDodavateluProObor(cl.Value)?.Koncentrace?.Query)"><i class="fas fa-search"></i></a></span>
                                    }

                                </p>
                            </td>
                        }
                    </tr>
                }

                <tr>
                    <td>
                        Podil Smluv<br />Na Celkovych Nakupech
                    </td>
                    @{
                        min = Model.Min(m => m.ForYear(rok).PodilSmluvNaCelkovychNakupech);
                        max = Model.Max(m => m.ForYear(rok).PodilSmluvNaCelkovychNakupech);
                    }
                    @foreach (var ki in Model)
                    {
                        val = ki.ForYear(rok).PodilSmluvNaCelkovychNakupech;
                        <td>
                            <span style="color:@(grad.Color(val,min,max).ToHex())">
                                @HlidacStatu.Util.RenderData.NicePercent(ki.ForYear(rok).PodilSmluvNaCelkovychNakupech)
                            </span>
                        </td>
                    }
                </tr>
                <tr>
                    <td>
                        Ovlivnitelné náklady<br />činnosti
                    </td>
                    @foreach (var ki in Model)
                    {
                        <td>
                            @HlidacStatu.Util.RenderData.NicePrice(ki.ForYear(rok).FinancniUdaje.OvlivnitelneNakladyCinnosti ?? 0)
                        </td>
                    }
                </tr>
            </tbody>
        </table>


    </div>
</div>

