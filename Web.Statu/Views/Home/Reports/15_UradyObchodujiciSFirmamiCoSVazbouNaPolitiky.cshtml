@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web
@using System.Web.Mvc
@using HlidacStatu.Web.Framework
@using HlidacStatu.Lib
@using HlidacStatu.Lib.Analysis
@using Devmasters.Core
@using System.Data
@using System.Data.SqlClient
@using HlidacStatu.Lib.Data

@using HlidacStatu.Lib.Render

@{


    var uradyIco = StaticData.MinisterstvaCache.Get()
                    .Union(StaticData.KrajskeUradyCache.Get())
                    .Union(StaticData.ManualChoosenCache.Get())
                    .Union(StaticData.StatutarniMestaAllCache.Get())
                    .Union(StaticData.PrahaManualCache.Get())
                    .Union(StaticData.OrganizacniSlozkyStatuCache.Get())
                    .Select(m => m.ICO)
                    .Where(i=>i != null)
                    ;




    var tableSloupce = new ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column[]
{
new  ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column() { Name="Úřad",
HtmlRender = (s) => {
            return string.Format("<a href='/subjekt/{0}'>{1}</a> <br/> {2}", s.Ico,
                Firmy.GetJmeno(s.Ico),
                ACore.GetBasicStatisticForICO(s.Ico).Summary.ToNiceString(null,true,"/subjekt/"+s.Ico));
        },
OrderValueRender = (s) => {
            return Firmy.GetJmeno(s.Ico);
            }
},
new  ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column() {
Name ="Počet smluv",
HtmlRender = (s) => {
            return s.Pocet.ToString();
        },
OrderValueRender = (s) => {
            return s.Pocet.ToString();
    }
},
new  ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column() {
Name ="% všech smluv",
HtmlRender = (s) => {
            var stat = ACore.GetBasicStatisticForICO(s.Ico);
            if (stat.Summary.Pocet > 0)
            {
                return ((double)s.Pocet/(double)stat.Summary.Pocet).ToString("P2");
            }
            else
                return "0";
        },
OrderValueRender = (s) => {
            var stat = ACore.GetBasicStatisticForICO(s.Ico);
            return HlidacStatu.Util.RenderData.OrderValueFormat(stat.Summary.Pocet);
    }
},
new  ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column() {
Name ="Celková hodnota smluv",
HtmlRender = (s) => {
            return HlidacStatu.Lib.Data.Smlouva.NicePrice(s.CelkemCena,html:true, shortFormat:true);
        },
OrderValueRender = (s) => {
            return HlidacStatu.Util.RenderData.OrderValueFormat(s.CelkemCena);
    }
},
new  ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column() {
    Name ="% hodnoty všech smluv",
    HtmlRender = (s) => {
            var stat = ACore.GetBasicStatisticForICO(s.Ico);
            if (stat.Summary.CelkemCena > 0)
            {
                return (s.CelkemCena/stat.Summary.CelkemCena).ToString("P1");
            }
            else
                return "0";
        },
OrderValueRender = (s) => {
            var stat = ACore.GetBasicStatisticForICO(s.Ico);
            return HlidacStatu.Util.RenderData.OrderValueFormat((stat.Summary.CelkemCena));
    }
},



new  ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>.Column() {
Name ="Dodavatelé",
HtmlRender = (s) => {
System.Text.StringBuilder sb = new System.Text.StringBuilder();
sb.Append("<ul>");
int previewCount = 3;
foreach (var f in s.Detail.OrderByDescending(m=>m.CelkemCena).Take(previewCount))
{
sb.AppendFormat("<li><a href='/Subjekt/{1}'>{2}</a> - <a href='/HledatSmlouvy?Q=icoPlatce:{0}%20AND%20icoPrijemce:{1}'>{3}</a></li>",
    s.Ico, f.Item, Firmy.GetJmeno(f.Item)
, f.ToNiceString(null,false, string.Format("", s.Ico, f.Item))
);

//sb.AppendFormat("<li><a href='/HledatSmlouvy?Q=icoPlatce:{0}%20AND%20icoPrijemce:{1}'>{2}</a> {3}</li>"
//    ,d.Ico, f.Ico, f.Name, f.StatForIco.ToNiceString("",false)
//    );

}
sb.Append("</ul>");
if (s.Detail.Count > previewCount)
{
string rand = Guid.NewGuid().ToString("N");
sb.Append("<a class='btn btn-link' role='button' data-toggle='collapse' href='#allData" + rand + "' aria-expanded='false' aria-controls='allData'>Ukázat všechny</a>");
sb.Append("<ul class='collapse' id='allData" + rand + "'>");
foreach (var f in s.Detail.OrderByDescending(m=>m.CelkemCena).Skip(previewCount))
{
sb.AppendFormat("<li><a href='/Subjekt/'{1}>{2}</a> - <a href=''>{3}</a></li>"
,s.Ico, f.Item, Firmy.GetJmeno(f.Item)
, f.ToNiceString(null,false, string.Format("/HledatSmlouvy?Q=icoPlatce:{0}%20AND%20icoPrijemce:{1}", s.Ico, f.Item))
);

//sb.AppendFormat("<li><a href='/HledatSmlouvy?Q=icoPlatce:{0}%20AND%20icoPrijemce:{1}'>{2}</a> {3}</li>"
//    ,d.Ico, f.Ico, f.Name, f.StatForIco.ToNiceString("",false)
//    );

}
sb.Append("</ul>");
}
return sb.ToString();
},
}

};




    var data = StaticData.UradyObchodujiciSFirmami_s_vazbouNaPolitiky_nedavne_Cache.Get();

    ReportDataSource<BasicDataForSubject<List<BasicData<string>>>> rds1 =
        new ReportDataSource<BasicDataForSubject<List<BasicData<string>>>>(tableSloupce);
    //foreach (var bf in data.SoukromeFirmy.Where(o => o.StatForIco.CelkemCena > 500000))
    foreach (var bf in data.SoukromeFirmy.Where(o => o.Pocet > 7).OrderByDescending(o=>o.CelkemCena).Take(500))
    {
        rds1.AddRow(bf);
    }


}


@UtilChart.RenderReport(typeof(BasicDataForSubject<List<BasicData<string>>>),
        new HlidacStatu.Lib.Render.ReportModel.QueueItem()
        {
            Type = ReportModel.QueueItem.types.table,
            Data = rds1
        }
        , @"{
            'language': {
            'url': '//cdn.datatables.net/plug-ins/1.10.19/i18n/Czech.json'
        },
        'order': [[2, 'desc']],
        'lengthChange': false,
        'info': false,
        }", "t1")
)
