@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web
@using System.Web.Mvc
@using HlidacStatu.Web.Framework
@using HlidacStatu.Lib
@using Devmasters
@using System.Data
@using System.Data.SqlClient
@using HlidacStatu.Lib.Data
@using HlidacStatu.Lib.Render


@{


    var tableSloupce = new ReportDataSource.Column[]
            {
        new  ReportDataSource.Column() { Name="Firma",
            HtmlRender = (s) => {
                                    AnalysisCalculation.IcoSmlouvaMinMax data = (AnalysisCalculation.IcoSmlouvaMinMax)s;
                                    return string.Format("<a href='/subjekt/{0}'>{1}</a>", data.ico, data.jmeno);
                                },
            TextRender = (s) => { return ((AnalysisCalculation.IcoSmlouvaMinMax)s).jmeno; }
        },
        new  ReportDataSource.Column() {
            Name ="Firma založena",
            HtmlRender = (s) => {
                AnalysisCalculation.IcoSmlouvaMinMax data = (AnalysisCalculation.IcoSmlouvaMinMax)s;
                return data.vznikIco.Value.ToString("dd.MM.yyyy");

            },
            OrderValueRender = (s) => { return HlidacStatu.Util.RenderData.OrderValueFormat(((AnalysisCalculation.IcoSmlouvaMinMax)s).vznikIco.Value); }
        },
        new  ReportDataSource.Column() {
            Name ="Rozdíl dnů",
            HtmlRender = (s) => {
                AnalysisCalculation.IcoSmlouvaMinMax data = (AnalysisCalculation.IcoSmlouvaMinMax)s;
                return ((data.days.Value < 0)
                        ? ("Firma založena " + Devmasters.Lang.Plural.Get((int)Math.Abs(data.days.Value),"{0} den;{0} dny;{0} dnů") + " po podepsání smlouvy")
                        : ("Firma založena " + Devmasters.Lang.Plural.Get((int)Math.Abs(data.days.Value),"{0} den;{0} dny;{0} dnů") + " před podepsáním smlouvy")
                       )
                    ;

            },
            OrderValueRender = (s) => { return HlidacStatu.Util.RenderData.OrderValueFormat(((AnalysisCalculation.IcoSmlouvaMinMax)s).days.Value); }
        },
        new  ReportDataSource.Column() {
            Name ="První smlouva s firmou podepsána dne",
            HtmlRender = (s) => {
                AnalysisCalculation.IcoSmlouvaMinMax data = (AnalysisCalculation.IcoSmlouvaMinMax)s;
                //return data.minUzavreni.Value.ToString("dd.MM.yyyy");
                return string.Format("{1}<br/><a href='/hledatsmlouvy?q=ico%3A{2}+AND+podepsano%3A%3C%3D{0}'>První smlouva</a>", data.minUzavreni.Value.ToString("yyyy-MM-dd"), data.minUzavreni.Value.ToString("d.M.yyyy"), data.ico);
                },
            OrderValueRender = (s) => { return  HlidacStatu.Util.RenderData.OrderValueFormat(((AnalysisCalculation.IcoSmlouvaMinMax)s).minUzavreni.Value.Ticks); }
        },
        new  ReportDataSource.Column() {
            Name ="Smluvní aktivita",
            HtmlRender = (s) => {
                AnalysisCalculation.IcoSmlouvaMinMax data = (AnalysisCalculation.IcoSmlouvaMinMax)s;
                var stat = Firmy.Get(data.ico).StatistikaRegistruSmluv();

                return "<a href=\"/hledatsmlouvy?Q=ico:" + data.ico + "\">" +
                    Devmasters.Lang.Plural.Get(stat.Summary().PocetSmluv, "{0} smlouva;{0} smlouvy;{0} smluv") +
                "</a>" +
                "<br />celkem " +
                HlidacStatu.Lib.Data.Smlouva.NicePrice(stat.Summary().CelkovaHodnotaSmluv, html: true, shortFormat: true)

                ;
            },
            OrderValueRender = (s) => {
                var ico = ((AnalysisCalculation.IcoSmlouvaMinMax)s).ico;
                var stat = Firmy.Get(ico).StatistikaRegistruSmluv();

                return HlidacStatu.Util.RenderData.OrderValueFormat(stat.Summary().CelkovaHodnotaSmluv );
            }
        },
            };




    var dataStatsCache = StaticData.FirmyCasovePodezreleZalozene.Get();


    ReportDataSource rds1 = new ReportDataSource(tableSloupce);
    foreach (var bf in dataStatsCache.Where(m => m.days >= -45 && m.days < 0))
    {
        rds1.AddRow(bf, bf, bf, bf, bf);
    }

    ReportDataSource rds2 = new ReportDataSource(tableSloupce);
    foreach (var bf in dataStatsCache.Where(m => m.days >= 0 && m.days<30))
    {
        rds2.AddRow(bf, bf, bf, bf, bf);
    }

    ReportDataSource rds3 = new ReportDataSource(tableSloupce);
    foreach (var bf in dataStatsCache.Where(m => m.days < -45).Take(300))
    {
        rds3.AddRow(bf, bf, bf, bf, bf);
    }


}



<div class="bs-callout bs-callout-info">
    <p>
        Založení firmy chvíli před podepsáním smlouvy není důkaz podvodu, nekalého úmyslu či chyby.
        Bývá to běžná situace u změny obchodní formy z důvodu účasti ve výběrovém řízení (živnostníka -> s.r.o.), prvního obchodního úspěchu nové firmy,
        prostě existuje spousta řádných obchodních a právních důvodů pro takový krok. A velké většina situací spadá do této "kolonky"
    </p>
    <p>
        Bývá to však také jeden z indikátorů, že může jít o účelově založenou společnost při zmanipulovaném výběrovém řízení,
        snahu o zakrytí skutečných vlastníků či špatné historie firmy, jeden z indikátorů potenciálně podezřelého chovaní.
    </p>
</div>




<h3>Firmy založené až po podepsání smlouvy</h3>
<div class="bs-callout bs-callout-danger">
    <p>
        <b>Podezřelá situace.</b>
        Pokud byla firma zapsaná do OŘ až po datu podepsání smlouvy, jak ukazují naše údaje z OŘ, je zpochybnitelná platnost smlouvy .
        Důvody mohou být různé, od chyby, formálních důvodů až po podvodné.
    </p>
    <p>Tyto firmy a jejich smlouvy doporučujeme k hlubšímu prozkoumání.</p>
</div>

@UtilChart.RenderReport("",ReportModel.QueueItem.types.table, rds1, @"{
                 'language': {
                    'url': '//cdn.datatables.net/plug-ins/1.10.19/i18n/Czech.json'
                },
                'order': [1,'desc'],
                'lengthChange': false,
                'info': false,
                }", "t1")



<h3>Firmy založené krátkou dobu před podepsáním smlouvy</h3>
<div class="bs-callout bs-callout-danger">
    <p>
        Pokud byla firma zapsaná do OŘ chvíly před podepsáním smlouvy, může se jednat o účelově založenou společnost.
        Někdy se tak stává před vyběrovým řízením a při problematické historii mateřské firmy. Důvody však mohou být i čistě obchodní.
    </p>
    <p>Tyto firmy a jejich smlouvy doporučujeme k hlubšímu prozkoumání.</p>
</div>

@UtilChart.RenderReport("",ReportModel.QueueItem.types.table, rds2, @"{
                 'language': {
                    'url': '//cdn.datatables.net/plug-ins/1.10.19/i18n/Czech.json'
                },
                'order': [],
                'lengthChange': false,
                'info': false,
                }", "t2")





<h3>Firmy založené velmi dlouho po podepsání smlouvy</h3>
<div class="bs-callout bs-callout-danger">
    <p>
        U těchto firem je nejpravděpodobnější, že se jedná o právního nástupce jedné ze smluvních stran, anebo o chybu.
    </p>
</div>
@UtilChart.RenderReport("",ReportModel.QueueItem.types.table, rds3, @"{
                 'language': {
                    'url': '//cdn.datatables.net/plug-ins/1.10.19/i18n/Czech.json'
                },
                'order': [],
                'lengthChange': false,
                'info': false,
                }", "t3")

