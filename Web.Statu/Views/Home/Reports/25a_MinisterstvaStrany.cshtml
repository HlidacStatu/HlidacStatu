
@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web
@using System.Web.Mvc
@using HlidacStatu.Web.Framework
@using HlidacStatu.Lib

@using Devmasters.Core
@using System.Data
@using System.Data.SqlClient
@using HlidacStatu.Lib.Data
@using HlidacStatu.Lib.Render

@functions {

    public class ministr
    {
        public string Id { get; set; }
        public string Vlada { get; set; }
        public string Resort { get; set; }
        public string Pozice { get; set; }
        public string Jmeno { get; set; }
        public string Strana { get; set; }
        public DateTime Zacatek { get; set; }
        public DateTime Konec { get; set; }
    }

    public class odpovednost
    {
        public List<string> Vlady { get; set; } = new List<string>();
        public string Resort { get; set; }
        public List<string> Jmena { get; set; } = new List<string>();
        public string Strana { get; set; }
        public DateTime Zacatek { get; set; } = DateTime.MaxValue;
        public DateTime Konec { get; set; } = DateTime.MinValue;
        public int Days { get { return (int)(this.Konec - this.Zacatek).TotalDays; } }
    }

    public List<odpovednost> DelkyVladnuti(List<ministr> data, string resort = null)
    {
        var allO = new List<odpovednost>();
        odpovednost o = null;
        foreach (var i in data.Where(m => (m.Resort == resort || resort == null)).OrderBy(m => m.Zacatek))
        {
            if (o?.Strana != i.Strana)
            {
                if (o != null)
                {
                    allO.Add(o);
                }
                o = new odpovednost();
                if (o.Vlady.Contains(i.Vlada) == false)
                {
                    o.Vlady.Add(i.Vlada);
                }
                if (o.Jmena.Contains(i.Jmeno) == false)
                {
                    o.Jmena.Add(i.Jmeno);
                }
                o.Resort = i.Resort;
                o.Strana = i.Strana;
                if (i.Zacatek < o.Zacatek)
                {
                    o.Zacatek = i.Zacatek;
                }
                if (i.Konec > o.Konec)
                {
                    o.Konec = i.Konec;
                }
            }
            else
            {
                if (o.Vlady.Contains(i.Vlada) == false)
                {
                    o.Vlady.Add(i.Vlada);
                }
                if (o.Jmena.Contains(i.Jmeno) == false)
                {
                    o.Jmena.Add(i.Jmeno);
                }
                if (i.Zacatek < o.Zacatek)
                {
                    o.Zacatek = i.Zacatek;
                }
                if (i.Konec > o.Konec)
                {
                    o.Konec = i.Konec;
                }
            }
        }
        if (o != null)
        {
            allO.Add(o);
        }

        return allO.OrderByDescending(oo => oo.Days).ToList();
    }

}

@{
    var ds = HlidacStatu.Lib.Data.External.DataSets.DataSet.CachedDatasets.Get("ministri");

    DateTime startDate = new DateTime(2002, 7, 15); //15. července 2002
    if (Request.QueryString["obdobi"] == "1998")
    {
        startDate = new DateTime(1998, 7, 22); //22. července 1998	zeman
    }
    if (Request.QueryString["obdobi"] == "2006")
    {
        startDate = new DateTime(2006, 10, 4); //4. září 2006	Topolanek I.
    }
    if (Request.QueryString["obdobi"] == "2010")
    {
        startDate = new DateTime(2010, 7, 13); //13. července 2010	Nečas
    }

    string[] ignore = new string[] { "Předseda vlády", "Místopředseda", "Ministr bez portfeje" };

    List<ministr> ministri = ds.SearchData("*", 1, 1000)
                                .Result.Select(m =>
                                    new ministr()
                                    {
                                        Id = m.id,
                                        Vlada = m.vlada,
                                        Resort = m.resort,
                                        Pozice = m.portfej,
                                        Jmeno = m.jmeno,
                                        Strana = m.strana,
                                        Zacatek = m.zacatek,
                                        Konec = ((DateTime?)m.konec) ?? DateTime.Now
                                    }
                                )
                                .Where(m => m.Zacatek >= startDate)
                                .ToList();


    List<string> resorty = ministri
                                .GroupBy(k => k.Resort)
                                .OrderByDescending(o => o.Count())
                                .Select(m => m.Key)
                                .Where(m => !ignore.Contains(m))
                                .OrderBy(m => m)
                                .ToList();

    List<string> strany = ministri
                            .GroupBy(k => k.Strana)
                            .OrderByDescending(o => o.Count())
                            .Select(m => m.Key)
                            .ToList();


    int count = 0;

    List<odpovednost> vladnutiAll = new List<odpovednost>(resorty.SelectMany(v => DelkyVladnuti(ministri, v)));

    string selectedStrana = Request.QueryString["strana"];
}
<div class="bs-callout bs-callout-primary">
    <h4>Jak dlouho zodpovídají jednotlivé politické strany za fungování státu a jednotlivé resorty?</h4>
    <h4>Které strany jsou tradiční a které se jimi stávají?</h4>
    <div>
        Na této stránce je pracujeme s počtem dní, které jednotlivé strany řídily. Počítáme jak nejdelší nepřerušené období řízení rezortů, tak celkový počet dní.
    </div>
    <div>
        Přes odkazy níže můžete změnit začátek počítaného období či si vypsat report pouze pro některou ze stran.
    </div>
    <div>
        Zdrojem dat je <a onclick="return trackOutLink(this,'report25');" href="https://cs.wikipedia.org/wiki/Seznam_ministrů_České_republiky" target="_blank">
            seznam ministrů vlád ČR z Wikipedie
        </a>, který jsme vyčistily a znormalizovali pomocí OpenRefine. Zdrojová, pročištěná a znormalizovaná data <a href="/data/index/ministri">najdete v databázích Hlídače</a>.
        <br />
        Názvy resortů jsme sjednotili či jednodušili tehdy, pokud politická pozice odpovídala za obdobné oblasti, jen se trochu lišil.

    </div>
</div>


<div class="row">
    <div class="col-xs-3 col-sm-2">Zobrazit statistiky</div>
    <div class="col-xs-9 col-sm-10">
        @if (startDate.Year == 1998)
        {
            <span style="font-weight:bold;color:red"><i class="far fa-angle-double-right"></i> od voleb 1998 (Zemanova vláda)</span>
        }
        else
        {
            <a href="?obdobi=1998&strana=@selectedStrana"><i class="far fa-angle-double-right"></i> od voleb 1998 (Zemanova vláda)</a>
        }
        <br />
        @if (startDate.Year == 2002)
        {
            <span style="font-weight:bold;color:red"><i class="far fa-angle-double-right"></i> od voleb 2002 (Špidlova vláda)</span>
        }
        else
        {
            <a href="?obdobi=2002&strana=@selectedStrana"><i class="far fa-angle-double-right"></i> od voleb 2002 (Špidlova vláda)</a>
        }
        <br />
        @if (startDate.Year == 2006)
        {
            <span style="font-weight:bold;color:red"><i class="far fa-angle-double-right"></i> od voleb 2006 (první Topolánkova vláda)</span>
        }
        else
        {
            <a href="?obdobi=2006&strana=@selectedStrana"><i class="far fa-angle-double-right"></i> od voleb 2006 (první Topolánkova vláda)</a>
        }
        <br />
        @if (startDate.Year == 2010)
        {
            <span style="font-weight:bold;color:red"><i class="far fa-angle-double-right"></i> od voleb 2010 (Nečasova vláda)</span>
        }
        else
        {
            <a href="?obdobi=2010&strana=@selectedStrana"><i class="far fa-angle-double-right"></i> od voleb 2010 (Nečasova vláda)</a>
        }
    </div>
</div>
<div class="row">

    <div class="col-xs-3 col-sm-2">Omezit zobrazení pro </div>
    <div class="col-xs-9 col-sm-10">
        @if (string.IsNullOrEmpty(selectedStrana))
        {
            <span style="font-weight:bold;color:red"><i class="far fa-angle-double-right"></i> všechny strany</span>
        }
        else
        {
            <a href="?obdobi=@Request["obdobi"]&strana="><i class="far fa-angle-double-right"></i> všechny strany</a>
        }
        @foreach (var str in strany.OrderBy(o => o))
        {
            if (selectedStrana == str)
            {
                <span style="font-weight:bold;color:red"><i class="far fa-angle-double-right"></i> @str</span>
            }
            else
            {
                <a href="?obdobi=@Request["obdobi"]&strana=@str"><i class="far fa-angle-double-right"></i> @str</a>
            }

        }
    </div>
</div>
<hr />
<h2 style="padding-top:20px;">Celkový čas vládnutí jednotlivých stran <small>od @startDate.ToString("d.M.yyyy")</small></h2>

<div class="row">
    @foreach (var stranaG in vladnutiAll
        .Where(m => m.Strana == selectedStrana || string.IsNullOrWhiteSpace(selectedStrana))
        .GroupBy(m => m.Strana)
        .OrderByDescending(o => o.Sum(c => c.Days)).Take(6))
    {
        count++;
        var strana = stranaG.Key;
        var stranaAllDays = vladnutiAll.Where(m => m.Strana == strana).Sum(m => m.Days);
        <div class="col-xs-6 col-sm-4">
            <h3>@strana</h3>
            <p>
                Celkem u moci na všech resortech dohromady
                <b style="font-size:120%">@HlidacStatu.Util.RenderData.NiceNumber(stranaAllDays) dní</b>,
                nejdéle
            </p>
            <ol>

                @foreach (var vr in vladnutiAll
                            .Where(m => m.Strana == strana)
                            .GroupBy(g => g.Resort)
                    .OrderByDescending(o => o.Sum(s => s.Days)).Take(5))
                {

                    var celkemD = vladnutiAll.Where(v => v.Strana == strana && v.Resort == vr.Key).Sum(m => m.Days);
                    var minD = vladnutiAll.Where(v => v.Strana == strana && v.Resort == vr.Key).Min(m => m.Zacatek);
                    var maxD = vladnutiAll.Where(v => v.Strana == strana && v.Resort == vr.Key).Max(m => m.Konec);
                    var nejdele = vladnutiAll.Where(v => v.Strana == strana && v.Resort == vr.Key).Max(m => m.Days);
                    <li>
                        <b>@vr.Key</b> (mezi @minD.ToString("d.M.yyyy") a @maxD.ToString("d.M.yyyy"))
                        <br />
                        celkem <b>@HlidacStatu.Util.RenderData.NiceNumber(celkemD) dní</b>

                        @if (nejdele < celkemD)
                        {
                            <span>
                                , nepřetržitě <b>@HlidacStatu.Util.RenderData.NiceNumber(nejdele) dní</b>
                            </span>
                        }
                    </li>
                }
            </ol>
        </div>
        if (count % 3 == 0)
        {
            <div class="clearfix"></div>
        }
    }


</div>

<hr />
<h2 style="padding-top:20px;">Nejdelší politická zodpovědnost stran za jednotlivé resorty <small>od @startDate.ToString("d.M.yyyy")</small></h2>

<div class="row">
    @{
        count = 0;
    }
    @foreach (var resort in resorty)
    {
        count++;
        var vladnuti = DelkyVladnuti(ministri, resort);
        if (!string.IsNullOrEmpty(selectedStrana))
        {
            if (!vladnuti.Any(m => m.Strana == selectedStrana))
            {
                continue;
            }

        }
        <div class="col-xs-6 col-sm-4">
            <h3>@resort</h3>
            <ol>
                @foreach (var vl in vladnuti.Take(3))
                {
                    var celkemD = vladnuti.Where(v => v.Strana == vl.Strana).Sum(m => m.Days);
                    <li>
                        <b>@vl.Strana</b> na <b>@vl.Resort</b> (@vl.Zacatek.ToString("d.M.yyyy") - @vl.Konec.ToString("d.M.yyyy"))
                        <br />nepřetržitě @HlidacStatu.Util.RenderData.NiceNumber(vl.Days) dní
                        @if (vl.Days < celkemD)
                        {
                            <div>
                                celkem @HlidacStatu.Util.RenderData.NiceNumber(celkemD) dní
                            </div>
                        }
                    </li>
                }
                @if (!string.IsNullOrEmpty(selectedStrana) && !vladnuti.Take(3).Any(m => m.Strana == selectedStrana))
                {
                    var vl = vladnuti.Where(m => m.Strana == selectedStrana).First();
                    var celkemD = vladnuti.Where(v => v.Strana == vl.Strana).Sum(m => m.Days);
                    <li>
                        <b>@vl.Strana</b> na <b>@vl.Resort</b> (@vl.Zacatek.ToString("d.M.yyyy") - @vl.Konec.ToString("d.M.yyyy"))
                        <br />nepřetržitě @HlidacStatu.Util.RenderData.NiceNumber(vl.Days) dní
                        @if (vl.Days < celkemD)
                        {
                            <div>
                                celkem @HlidacStatu.Util.RenderData.NiceNumber(celkemD) dní
                            </div>
                        }
                    </li>

                }
            </ol>
        </div>
        if (count % 3 == 0)
        {
            <div class="clearfix"></div>
        }
    }

</div>




