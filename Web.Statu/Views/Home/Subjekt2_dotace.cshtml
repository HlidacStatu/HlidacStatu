@model HlidacStatu.Lib.Data.Firma

@using Nest;
@using HlidacStatu.Web.Framework;
@using System.Collections.Generic;
@using System.Linq;
@using System;
@using System.Data;
@using HlidacStatu.Lib.Render;

@{ 
    Layout = null;
}


<div>
    <h4>Dotace graf</h4>

    @{
        var dotaceService = new HlidacStatu.Lib.Data.Dotace.DotaceService();
        var subsidies = dotaceService.GetDotaceForIco(Model.ICO);
    }

    @* Přidat sem sloupcový graf souhrnů dotací za jednotlivé roky  *@

    @{
        ReportDataSource reportData = new ReportDataSource(new ReportDataSource.Column[]
        {

            new ReportDataSource.Column()
            {
                Name = "Rok"
            },
            new ReportDataSource.Column()
            {
                Name = "Celkový objem dotace"
            },
        });

        List<(int Rok, decimal Castka)> subsidiesYearly = new List<(int Rok, decimal Castka)>();
        foreach(var subsidy in subsidies)
        {
            IEnumerable<(int Rok, decimal Castka)> cerpani = subsidy.Rozhodnuti
                .SelectMany(r => r.Cerpani, (roz, cer) =>
                (
                    cer?.Rok ?? roz.Rok ?? subsidy.DatumPodpisu?.Year ?? 0,
                    cer?.CastkaSpotrebovana ?? 0
                )
            ).ToArray();

            subsidiesYearly.AddRange(cerpani);
        }

        var data = subsidiesYearly
            .GroupBy(s => s.Rok)
            .Select(g => new ReportDataTimeValue()
            {
                Date = new DateTime(g.Key, 1, 1),
                Value = g.Sum(x => x.Castka)
            });


        @UtilChart.SimpleColumnChart(
           new (string name, IEnumerable<HlidacStatu.Lib.Render.ReportDataTimeValue> values)[] { (name: "Dotace po letech", values: data) },
        "Přehled inkasovaných dotací", "Přehled dotací", 500);

        }



    <a class="text-uppercase"><strong>Zobrazit podrobnosti</strong></a>
</div>

