@model HlidacStatu.Lib.Data.Firma

@using Nest;
@using HlidacStatu.Web.Framework;
@using System.Collections.Generic;
@using System.Linq;
@using System;
@using System.Data;
@using HlidacStatu.Lib.Render;

@{
    Layout = null;
    //ViewBag.Title = "" + Model.Jmeno + " v registru smluv.";

    var statistics = Model.StatistikaRegistruSmluv();
    int chartMinDate = 2016;
    int chartMaxDate = DateTime.Now.Year;
    var statisticsAfter2016 = statistics
        .Where(s => statistics.YearsAfter2016().Contains(s.Year))
        .OrderBy(s => s.Year);

    var summaryAfter2016 = statistics.Summary(statistics.YearsAfter2016());
    var statHoldingAktual = Model.HoldingStatisticsRegistrSmluv(HlidacStatu.Lib.Data.Relation.AktualnostType.Aktualni);
    var holdingSummaryAfter2016 = statHoldingAktual.Summary(statHoldingAktual.YearsAfter2016());
    string NiceString(string url, int pocetSmluv, decimal cenaCelkem)
    {
        return $"<a href='{url}'>" +
            Devmasters.Lang.Plural.Get(pocetSmluv, "{0} smlouva;{0} smlouvy;{0} smluv") +
            "</a> za celkem " +
            HlidacStatu.Lib.Data.Smlouva.NicePrice(cenaCelkem, html: true, shortFormat: true);
    }

    var seasonStat = statistics.CurrentSeasonStatistics();
    var currentSeasonYear = statistics.CurrentSeasonYear();
    var zmenaObjemuSmluv = statistics.ChangeBetweenYears(currentSeasonYear - 1, currentSeasonYear, s => s.CelkovaHodnotaSmluv);


    //Graf hodnota smluv
    var hodnotaSmluvGraphData = new HlidacStatu.Lib.Render.Series[]
    {
        new HlidacStatu.Lib.Render.Series()
        {
            Color = "#AAAAAA",
            Name = "Hodnota smluv",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.CelkovaHodnotaSmluv)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " Kč"
            }
        },
        new HlidacStatu.Lib.Render.Series()
        {
            Color = "#333333",
            Name = "Hodnota smluv se soukromými subjekty",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.CelkovaHodnotaSmluvSeSoukrSubj)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " Kč"
            }
        },
        new HlidacStatu.Lib.Render.Series()
        {
            Color = "#770077",
            Name = "Počet smluv bez ceny",
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PocetSmluvBezCeny)).ToArray(),
            Type = Series.SeriesType.line,

        }
    };

    //Graf počet smluv/počet smluv s utajenou cenou
    var pocetSmluvGraphData = new HlidacStatu.Lib.Render.Series[]
    {
        new HlidacStatu.Lib.Render.Series()
        {
            Color = "#AAAAAA",
            Name = "Počet smluv",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PocetSmluv)).ToArray(),
        },
        new HlidacStatu.Lib.Render.Series()
        {
            Color = "#333333",
            Name = "Počet smluv s utajenou cenou",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PocetSmluvBezCeny)).ToArray(),

        },
    };

    //Graf počet smluv/počet smluv s utajenou cenou
    var procentaSmluvGraphData = new HlidacStatu.Lib.Render.Series[]
    {
        new HlidacStatu.Lib.Render.Series()
        {
            Color = "#CCCCCC",
            Name = "s utajenou cenou",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PercentSmluvBezCeny * 100)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " %"
            }
        },
        new HlidacStatu.Lib.Render.Series()
        {
            Color = "#AAAAAA",
            Name = "s vazbou na politiky",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PercentSmluvPolitiky * 100)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " %"
            }
        },
        
    };
}



    @* První sloupec *@
    <div class="col-sm-7 col-sm-pull-5 col-xs-12 col-xs-pull-0">
        <div>
            <h4>Závažné nedostatky</h4>
            <div>
                @{
                    var currentYear = DateTime.Now.Year;
                    var numFatalIssue = HlidacStatu.Lib.Data.Smlouva.Search.SimpleSearch($"ico:{Model.ICO} AND chyby:zasadni AND cena:0 AND datumUzavreni:[{currentYear}-01-01 TO {currentYear + 1}-01-01}}", 0, 0, HlidacStatu.Lib.Data.Smlouva.Search.OrderResult.FastestForScroll, exactNumOfResults: true).ElasticResults.HitsMetadata.Total;
                    var numVazneIssue = HlidacStatu.Lib.Data.Smlouva.Search.SimpleSearch($"ico:{Model.ICO} AND chyby:vazne AND cena:0 AND datumUzavreni:[{currentYear}-01-01 TO {currentYear + 1}-01-01}}", 0, 0, HlidacStatu.Lib.Data.Smlouva.Search.OrderResult.FastestForScroll, exactNumOfResults: true).ElasticResults.HitsMetadata.Total;
                }
                @if (numFatalIssue.Value > 0)
                {
                    <p>
                        Zásadní nedostatky za letošní rok v rozporu se zákonem jsme zjistili u
                        <a class="text-danger" href="/hledatsmlouvy?q=ico:@(Model.ICO)+AND+chyby:zasadni AND cena:0 AND datumUzavreni:[@(currentYear)-01-01 TO @(currentYear + 1)-01-01}">
                            @if (numFatalIssue.Relation == TotalHitsRelation.GreaterThanOrEqualTo)
                            {
                                @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)numFatalIssue.Value, "<u><strong>0 </strong>smluv</u>.", "<u><strong>jedné </strong>smlouvy</u>.", "<u><strong>{0} </strong>smluv</u>.", "<u><strong>více než {0:### ### ##0} </strong>smluv</u>.")) }
                            else
                            {
                                @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)numFatalIssue.Value, "<u><strong>0 </strong>smluv</u>.", "<u><strong>jedné </strong>smlouvy</u>.", "<u><strong>{0} </strong>smluv</u>.", "<u><strong>{0:### ### ##0} </strong>smluv</u>."))
                            }
                            Tyto smlouvy jsou velmi pravděpodobně neplatné.
                        </a>
                    </p>
                }
                @if (numVazneIssue.Value > 0)
                {
                    <p>
                        @if (numFatalIssue.Value == 0)
                        {
                            <span>Vážné nedostatky za letošní rok jsme zjistili u</span>
                        }
                        else
                        {
                            <span>Zároveň vážné nedostatky za letošní rok jsme zjistili u</span>
                        }

                        <a class="text-danger" href="/hledatsmlouvy?q=ico:@(Model.ICO)+AND+chyby:vazne AND cena:0 AND datumUzavreni:[@(currentYear)-01-01 TO @(currentYear + 1)-01-01}">
                            @if (numFatalIssue.Relation == TotalHitsRelation.GreaterThanOrEqualTo)
                            {
                                @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)numVazneIssue.Value, "<u><strong>0 </strong>smluv</u>.", "<u><strong>jedné </strong>smlouvy</u>.", "<u><strong>{0} </strong>smluv</u>.", "<u><strong>více než {0:### ### ##0} </strong>smluv</u>.")) }
                            else
                            {
                                @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)numVazneIssue.Value, "<u><strong>0 </strong>smluv</u>.", "<u><strong>jedné </strong>smlouvy</u>.", "<u><strong>{0} </strong>smluv</u>.", "<u><strong>{0:### ### ##0} </strong>smluv</u>."))
                            }
                        </a>
                    </p>
                }


                <p>
                    V roce @(currentSeasonYear) uzavřel @(Model.JsemOVM()? "úřad" : "subjekt")
                    <a href="/hledat?q=ico:@(Model.ICO) AND cena:0 AND datumUzavreni:[@(currentSeasonYear)-01-01 TO @(currentSeasonYear + 1)-01-01}">
                        @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)seasonStat.PocetSmluv, "<u><strong>0 </strong>smluv</u>", "<u><strong>jednu </strong>smlouvu</u>", "<u><strong>{0} </strong>smluvy</u>", "<u><strong>{0:### ### ##0} </strong>smluv</u>"))
                    </a>
                    za <strong>@(Html.Raw(HlidacStatu.Lib.Data.Smlouva.NicePrice(seasonStat.CelkovaHodnotaSmluv, html: true, shortFormat: true)))</strong>

                    @if (zmenaObjemuSmluv.percentage.HasValue)
                    {
                        int predchoziRok = currentSeasonYear - 1;
                        string baseText = $"o {zmenaObjemuSmluv.percentage?.ToString("P2")} oproti roku {predchoziRok}";
                        string text;
                        switch (zmenaObjemuSmluv.percentage)
                        {
                            case decimal n when n > 0:
                                text = $"(nárůst {baseText})";
                                break;
                            case decimal n when n < 0:
                                text = $"(pokles {baseText})";
                                break;
                            default:
                                text = $"(stejný objem smluv jako v roce {predchoziRok})";
                                break;
                        }

                        <span>@text</span>
                    }

                </p>

                <p>
                    V @(currentSeasonYear) utajil hodnotu kontraktu u
                    <a href="/hledat?q=ico:@(Model.ICO) AND cena:0 AND datumUzavreni:[@(currentSeasonYear)-01-01 TO @(currentSeasonYear + 1)-01-01}">
                        @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)seasonStat.PocetSmluvBezCeny, "<u><strong>0 </strong>smluv</u>,", "<u><strong>jedné </strong>smlouvy</u>,", "<u><strong>{0} </strong>smluv</u>,", "<u><strong>{0:### ### ##0} </strong>smluv</u>,"))
                    </a>což je celkem @(seasonStat.PercentSmluvBezCeny.ToString("P2")) ze všech.
                </p>
            </div>

            <hr />

            @* GRAFY *@
            <h4>Souhrnné statistiky pro @Model.Jmeno</h4>
            @Html.ColumnGraph("Hodnota smluv", hodnotaSmluvGraphData, yTitleRight: "Počet smluv"),
            @Html.ColumnGraph("Počet smluv", pocetSmluvGraphData, yTitleLeft: "Počet smluv"),
            @Html.ColumnGraph("Procenta smluv", procentaSmluvGraphData, yTitleLeft: "% smluv"),

            <div class="row">

                @* Levý sub-sloupec *@
                <div class="col-md-6">
                    <div>
                        @{ ReportDataSource rdsSumPerY = ReportDataSource.SimpleReportDataForDateChart("Rok", "Počet smluv",
                            statistics
                                .Where(k => k.Year >= chartMinDate && k.Year <= chartMaxDate)
                                .ToDictionary(k => new DateTime(k.Year, 1, 1,0,0,0, DateTimeKind.Utc), v => (decimal)v.Value.CelkovaHodnotaSmluv)
                            );

                            @UtilChart.RenderReportChart("Hodnota smluv", UtilChart.SimpleBarChart(
                                               true, true, 150, "rdsSumPerY",
                                                "", "",
                                               rdsSumPerY, "Kč", xValueFormat: "{value:%Y}")
                                       ) }
                    </div>

                    <div>
                        @{ ReportDataSource rdsCountPerY = ReportDataSource.SimpleReportDataForDateChart("Rok", "Počet smluv",
                                statistics
                                    .Where(k => k.Year >= chartMinDate && k.Year <= chartMaxDate)
                                    .ToDictionary(k => new DateTime(k.Year, 1, 1), v => (decimal)v.Value.PocetSmluv)
                                );

                            @UtilChart.RenderReportChart("Počet smluv", UtilChart.SimpleBarChart(
                                              true, true, 150, "rdsCountPerY",
                                              "", "",
                                              rdsCountPerY, "", xValueFormat: "{value:%Y}")
                                      ) }
                    </div>

                    <div>
                        @{ ReportDataSource rdsbezCenyPerY = ReportDataSource.SimpleReportDataForDateChart("Rok", "% smluv",
                                statistics
                                    .Where(k => k.Year >= chartMinDate && k.Year <= chartMaxDate)
                                    .ToDictionary(k => new DateTime(k.Year, 1, 1), v => (decimal)v.Value.PercentSmluvBezCeny * 100)
                                );

                            @UtilChart.RenderReportChart("% smluv s utajenou cenou ", UtilChart.SimpleBarChart(
                                            true, true, 150, "rdsbezCenyPerY",
                                            "", "%",
                                            rdsbezCenyPerY, "%", xValueFormat: "{value:%Y}")
                                    ) }
                    </div>
                </div>

                @* Pravý sub-sloupec *@
                <div class="col-md-6">
                    @if (Model.PatrimStatu()
                        && summaryAfter2016.PocetSmluvPolitiky > 0)
                    {
                        <div>
                            @{ ReportDataSource rdsPolitikPerYKc = ReportDataSource.SimpleReportDataForDateChart("Rok", "Hodnota smluv",
                                    statistics
                                    .Where(k => k.Year >= chartMinDate && k.Year <= chartMaxDate)
                                    .ToDictionary(k => new DateTime(k.Year, 1, 1), v => (decimal)v.Value.SumKcSmluvPolitiky)
                                    );

                                @UtilChart.RenderReportChart("Hodnota smluv s vazbou na politiky", UtilChart.SimpleBarChart(
                                            true, true, 150, "rdsPolitikPerYKc",
                                            "", "Kč",
                                            rdsPolitikPerYKc, "Kč", xValueFormat: "{value:%Y}")
                                    ) }
                        </div>
                        <div>
                            @{ ReportDataSource rdsPolitikPerY = ReportDataSource.SimpleReportDataForDateChart("Rok", "% smluv",
                                    statistics
                                    .Where(k => k.Year >= chartMinDate && k.Year <= chartMaxDate)
                                    .ToDictionary(k => new DateTime(k.Year, 1, 1), v => (decimal)v.Value.PercentSmluvPolitiky * 100)
                                    );

                                @UtilChart.RenderReportChart("% smluv s vazbou na politiky", UtilChart.SimpleBarChart(
                                            true, true, 150, "rdsPolitikPerY",
                                            "", "%",
                                            rdsPolitikPerY, "%", xValueFormat: "{value:%Y}")
                                    ) }
                        </div>
                    }
                </div>
            </div>
            <hr />

                            <div>
                                <h4>Statistiky registru smluv pro @(Model.JsemOVM()? "úřad" : "subjekt") od 2016</h4>
                    <div>
                        @Html.Raw(NiceString($"/hledat?q=holding:{Model.ICO}", (int)summaryAfter2016.PocetSmluv, summaryAfter2016.CelkovaHodnotaSmluv))<br />
                        @(summaryAfter2016.PercentSmluvBezCeny.ToString("P1")) smluv se skrytou cenou<br />
                        @(summaryAfter2016.PercentSmluvBezSmluvniStrany.ToString("P1")) smluv se skrytou smluvní stranou<br />
                        @if (Model.PatrimStatu())
                        {
                            <text>
                                @(summaryAfter2016.PercentSmluvPolitiky.ToString("P1")) smluv s firmami navázanými na politiky
                            </text>}
                    </div>
                </div>

            @if (
                Model.AktualniVazby(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny).Count() > 0
                && holdingSummaryAfter2016.PocetSmluv > 0
                )
            {
                <div>
                    <h4>Statistiky pro @(Model.JsemOVM()? "úřad a jeho podřízené organizace" : "subjekt a všechny dceřinné společnosti") od 2016</h4>
                    <div>
                        @Html.Raw(NiceString($"/hledat?q=holding:{Model.ICO}", (int)holdingSummaryAfter2016.PocetSmluv, holdingSummaryAfter2016.CelkovaHodnotaSmluv))<br />
                        @(holdingSummaryAfter2016.PercentSmluvBezCeny.ToString("P1")) smluv se skrytou cenou<br />
                        @(holdingSummaryAfter2016.PercentSmluvBezSmluvniStrany.ToString("P1")) smluv se skrytou smluvní stranou<br />
                        @if (Model.PatrimStatu())
                        {
                            <text>
                                @(holdingSummaryAfter2016.PercentSmluvPolitiky.ToString("P1")) smluv s firmami navázanými na politiky
                            </text>}
                    </div>
                </div>
            }

            <hr />

            @if (Model.PatrimStatu() && summaryAfter2016.PocetSmluvPolitiky > 0)
            {
                <div>
                    <h4>Smlouvy s vazbou na politiky</h4>
                    <div id="_smlouvy_s_politiky">
                        <a href="#tododoooo">Tenhle odkaz nasměrovat na smlouvy s politiky</a>.

                        <table class="table table-condensed table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th style="text-align:left">Rok</th>
                                    <th style="text-align:center">Počet smluv</th>
                                    <th style="text-align:center">% podíl</th>
                                    <th style="text-align:center">Hodnota smluv v Kč</th>
                                    <th style="text-align:center">% podíl</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var bs in statistics
                                    .Where(y => statistics.YearsAfter2016().Contains(y.Year))
                                    .OrderBy(y => y.Year))
                                {
                                    <tr>
                                        <td>@bs.Year</td>
                                        <td class="number">@bs.Value.PocetSmluvPolitiky</td>
                                        <td class="number">@bs.Value.PercentSmluvPolitiky.ToString("P2")</td>
                                        <td class="number">@Html.Raw(HlidacStatu.Util.RenderData.ShortNicePrice(bs.Value.SumKcSmluvPolitiky, html: true))</td>
                                        <td class="number">@bs.Value.PercentKcSmluvPolitiky.ToString("P2")</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>Celkem</th>
                                    <th class="number">@summaryAfter2016.PocetSmluvPolitiky</th>
                                    <th class="number">@summaryAfter2016.PercentSmluvPolitiky.ToString("P2")</th>
                                    <th class="number">@Html.Raw(HlidacStatu.Util.RenderData.ShortNicePrice(summaryAfter2016.SumKcSmluvPolitiky, html: true))</th>
                                    <th class="number">@summaryAfter2016.PercentKcSmluvPolitiky.ToString("P2")</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            }

        </div>

    </div>
