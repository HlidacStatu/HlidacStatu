@model HlidacStatu.Lib.Data.Firma

@using Nest;
@using HlidacStatu.Web.Framework;
@using System.Collections.Generic;
@using System.Linq;
@using System;
@using System.Data;
@using HlidacStatu.Lib.Render;

@{
    Layout = null;
    //ViewBag.Title = "" + Model.Jmeno + " v registru smluv.";

    List<string> sentences = new List<string>();

    string ValidUrl(string url, string query, int? year = null)
    {
        if (year.HasValue)
        {
            query = HlidacStatu.Lib.Searching.Tools.ModifyQueryAND(query, $"datumUzavreni:[{year}-01-01 TO {year + 1}-01-01}}");
        }
        return $"{url}?q={System.Net.WebUtility.UrlEncode(query)}";
    }

    string NiceString(string url, string query, int pocetSmluv, decimal cenaCelkem, int? year = null)
    {
        return $"<a href='{ValidUrl(url, query, year)}'>" +
            Devmasters.Lang.Plural.Get(pocetSmluv, "{0} smlouva;{0} smlouvy;{0} smluv") +
            "</a> za celkem " +
            HlidacStatu.Lib.Data.Smlouva.NicePrice(cenaCelkem, html: true, shortFormat: true);
    }



    var statistics = Model.StatistikaRegistruSmluv();

    var statisticsAfter2016 = statistics
        .Where(s => statistics.YearsAfter2016().Contains(s.Year))
        .OrderBy(s => s.Year);

    var summaryAfter2016 = statistics.Summary(statistics.YearsAfter2016());
    var statHoldingAktual = Model.HoldingStatisticsRegistrSmluv(HlidacStatu.Lib.Data.Relation.AktualnostType.Aktualni);
    var holdingSummaryAfter2016 = statHoldingAktual.Summary(statHoldingAktual.YearsAfter2016());

    var seasonStat = statistics.CurrentSeasonStatistics();
    var currentSeasonYear = statistics.CurrentSeasonYear();
    var zmenaObjemuSmluv = statistics.ChangeBetweenYears(currentSeasonYear - 1, currentSeasonYear, s => s.CelkovaHodnotaSmluv);


    //Graf hodnota smluv
    var hodnotaSmluvGraphData = new HlidacStatu.Lib.Render.Series[]
    {
        new HlidacStatu.Lib.Render.Series()
        {
            Name = "Hodnota smluv",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.CelkovaHodnotaSmluv)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " Kč"
            }
        },
        new HlidacStatu.Lib.Render.Series()
        {
            Name = "Hodnota smluv se soukromými subjekty",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.CelkovaHodnotaSmluvSeSoukrSubj)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " Kč"
            }
        },
        new HlidacStatu.Lib.Render.Series()
        {
            Name = "Počet smluv bez ceny",
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PocetSmluvBezCeny)).ToArray(),
            Type = Series.SeriesType.line,

        }
                    };

    //Graf počet smluv/počet smluv s utajenou cenou
    var pocetSmluvGraphData = new HlidacStatu.Lib.Render.Series[]
    {
        new HlidacStatu.Lib.Render.Series()
        {
            Name = "Počet smluv",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PocetSmluv)).ToArray(),
        },
        new HlidacStatu.Lib.Render.Series()
        {
            Name = "Počet smluv s utajenou cenou",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PocetSmluvBezCeny)).ToArray(),

        },
                    };

    //Graf procenta smluv/počet smluv s utajenou cenou
    var procentaSmluvGraphData = new HlidacStatu.Lib.Render.Series[]
    {
        new HlidacStatu.Lib.Render.Series()
        {
            Name = "s utajenou cenou",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PercentSmluvBezCeny * 100)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " %"
            }
        },
        new HlidacStatu.Lib.Render.Series()
        {
            Name = "s vazbou na politiky",
            Type = Series.SeriesType.column,
            Data = statisticsAfter2016
                .Select(x => new SeriesData(x.Year, x.Value.PercentSmluvPolitiky * 100)).ToArray(),
            SeriesTooltip = new SeriesTooltip()
            {
                ValueSuffix = " %"
            }
        },

                    };
}



@* První sloupec *@
<div class="col-sm-7 col-sm-pull-5 col-xs-12 col-xs-pull-0">
    <div>
        <h4>Závažné nedostatky</h4>
        <div>
            @{
                var currentYear = DateTime.Now.Year;
                var numFatalIssue = HlidacStatu.Lib.Data.Smlouva.Search.SimpleSearch($"ico:{Model.ICO} AND chyby:zasadni AND cena:0 AND datumUzavreni:[{currentYear}-01-01 TO {currentYear + 1}-01-01}}", 0, 0, HlidacStatu.Lib.Data.Smlouva.Search.OrderResult.FastestForScroll, exactNumOfResults: true).ElasticResults.HitsMetadata.Total;
                var numVazneIssue = HlidacStatu.Lib.Data.Smlouva.Search.SimpleSearch($"ico:{Model.ICO} AND chyby:vazne AND cena:0 AND datumUzavreni:[{currentYear}-01-01 TO {currentYear + 1}-01-01}}", 0, 0, HlidacStatu.Lib.Data.Smlouva.Search.OrderResult.FastestForScroll, exactNumOfResults: true).ElasticResults.HitsMetadata.Total;
            }
            @if (numFatalIssue.Value > 0)
            {
                <p>
                    Zásadní nedostatky za letošní rok v rozporu se zákonem jsme zjistili u
                    <a class="text-danger" href="/hledatsmlouvy?q=ico:@(Model.ICO)+AND+chyby:zasadni AND cena:0 AND datumUzavreni:[@(currentYear)-01-01 TO @(currentYear + 1)-01-01}">
                        @if (numFatalIssue.Relation == TotalHitsRelation.GreaterThanOrEqualTo)
                        {
                            @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)numFatalIssue.Value, "<strong>0 </strong>smluv.", "<strong>jedné </strong>smlouvy.", "<strong>{0} </strong>smluv.", "<strong>více než {0:### ### ##0} </strong>smluv.")) }
                        else
                        {
                            @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)numFatalIssue.Value, "<strong>0 </strong>smluv.", "<strong>jedné </strong>smlouvy.", "<strong>{0} </strong>smluv.", "<strong>{0:### ### ##0} </strong>smluv."))
                        }
                        Tyto smlouvy jsou velmi pravděpodobně neplatné.
                    </a>
                </p>
            }
            @if (numVazneIssue.Value > 0)
            {
                <p>
                    @if (numFatalIssue.Value == 0)
                    {
                        <span>Vážné nedostatky za letošní rok jsme zjistili u</span>
                    }
                    else
                    {
                        <span>Zároveň vážné nedostatky za letošní rok jsme zjistili u</span>
                    }

                    <a class="text-danger" href="/hledatsmlouvy?q=ico:@(Model.ICO)+AND+chyby:vazne AND cena:0 AND datumUzavreni:[@(currentYear)-01-01 TO @(currentYear + 1)-01-01}">
                        @if (numFatalIssue.Relation == TotalHitsRelation.GreaterThanOrEqualTo)
                        {
                            @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)numVazneIssue.Value, "<strong>0 </strong>smluv.", "<strong>jedné </strong>smlouvy.", "<strong>{0} </strong>smluv.", "<strong>více než {0:### ### ##0} </strong>smluv.")) }
                        else
                        {
                            @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)numVazneIssue.Value, "<strong>0 </strong>smluv.", "<strong>jedné </strong>smlouvy.", "<strong>{0} </strong>smluv.", "<strong>{0:### ### ##0} </strong>smluv."))
                        }
                    </a>
                </p>
            }


            <p>
                V roce @(currentSeasonYear) uzavřel @(Model.JsemOVM() ? "úřad" : "subjekt")
                <a href="/hledat?q=ico:@(Model.ICO) AND cena:0 AND datumUzavreni:[@(currentSeasonYear)-01-01 TO @(currentSeasonYear + 1)-01-01}">
                    @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)seasonStat.PocetSmluv, "<strong>0 </strong>smluv", "<strong>jednu </strong>smlouvu", "<strong>{0} </strong>smluvy", "<strong>{0:### ### ##0} </strong>smluv"))
                </a>
                za <strong>@(Html.Raw(HlidacStatu.Lib.Data.Smlouva.NicePrice(seasonStat.CelkovaHodnotaSmluv, html: true, shortFormat: true)))</strong>

                @if (zmenaObjemuSmluv.percentage.HasValue)
                {
                    int predchoziRok = currentSeasonYear - 1;
                    string baseText = $"o {zmenaObjemuSmluv.percentage?.ToString("P2")} oproti roku {predchoziRok}";
                    string text;
                    switch (zmenaObjemuSmluv.percentage)
                    {
                        case decimal n when n > 0:
                            text = $"(nárůst {baseText})";
                            break;
                        case decimal n when n < 0:
                            text = $"(pokles {baseText})";
                            break;
                        default:
                            text = $"(stejný objem smluv jako v roce {predchoziRok})";
                            break;
                    }

                    <span>@text</span>
                }

            </p>

            <p>
                V @(currentSeasonYear) utajil hodnotu kontraktu u
                <a href="/hledat?q=ico:@(Model.ICO) AND cena:0 AND datumUzavreni:[@(currentSeasonYear)-01-01 TO @(currentSeasonYear + 1)-01-01}">
                    @Html.Raw(Devmasters.Lang.Plural.GetWithZero((int)seasonStat.PocetSmluvBezCeny, "<strong>0 </strong>smluv,", "<strong>jedné </strong>smlouvy,", "<strong>{0} </strong>smluv,", "<strong>{0:### ### ##0} </strong>smluv,"))
                </a>což je celkem @(seasonStat.PercentSmluvBezCeny.ToString("P2")) ze všech.
            </p>
        </div>

        <hr />

        @* GRAFY *@
        <h4>Souhrnné statistiky pro @Model.Jmeno</h4>
        <p>
            Zobrazit všechny smlouvy:  @Html.Raw(NiceString($"/hledatSmlouvy", $"ico:{Model.ICO}", (int)statistics.Summary().PocetSmluv, statistics.Summary().CelkovaHodnotaSmluv));

            @if (statistics.Summary().PocetSmluvSeZasadnimNedostatkem > 0)
            {
            <p>
                @Html.Raw($"<a href='{ValidUrl("/hledatSmlouvy", "( chyby:zasadni )")}'>{Devmasters.Lang.Plural.Get(statistics.Summary().PocetSmluvSeZasadnimNedostatkem, "Jedna smlouvu má", "{0} smlouvy mají", "{0} smluv má")}</a> zásadní nedostatek");
            </p>
            }
            @if (statistics.Summary().PocetSmluvULimitu > 0)
            {
                <p>
                    @Html.Raw($"<a href='{ValidUrl("/hledatSmlouvy", "( hint.smlouvaULimitu:>0 )")}'>{Devmasters.Lang.Plural.Get(statistics.Summary().PocetSmluvULimitu, "Jednu smlouva je", "{0} smlouvy jsou", "{0} smluv je")}</a> s hodnotou těsně pod limitem veřejných zakázek");
                </p>
            }
            @if (Model.PatrimStatu() && (statistics.Summary().PercentSmluvPolitiky > 0))
            {
                <p>
                    @Html.Raw($"<a href='{ValidUrl("/hledatSmlouvy", "( sVazbouNaPolitikyNedavne:true ) ")}'>{(statistics.Summary().PercentSmluvPolitiky.ToString("P1"))}</a> smluv s firmami navázanými na politiky");
                </p>
            }
            </p>
            <hr />
            @Html.ColumnGraph("Hodnota smluv po letech", hodnotaSmluvGraphData, yTitleRight: "Počet smluv")
            <hr />
            @Html.ColumnGraph("Počet smluv po letech", pocetSmluvGraphData, yTitleLeft: "Počet smluv")
            <hr />
            @if (Model.PatrimStatu())
            {
                <p>
                    @Html.ColumnGraph("Smlouvy s utajenou cenou a vazbou na politiky", procentaSmluvGraphData, yTitleLeft: "% smluv")
                </p>
            }
            <hr />

            @for (int y = statistics.CurrentSeasonYear(); y > 2016; y--)
            {
                <div>
                    <h3>Statistiky registru smluv pro @(Model.JsemOVM() ? "úřad" : "subjekt") v @y</h3>
                    <ul>
                        @if (Model.Kindex()?.ForYear(y)?.KIndexReady == true)
                        {
                            <li>
                                K-Index v @y má hodnotu @Html.KIndexIcon(Model.Kindex().ForYear(y).KIndexLabel) (<a href="@Model.Kindex().GetUrl(true, y)">více</a>)
                            </li>
                        }
                        <li>
                            @{
                                sentences.Clear();
                                sentences.Add(NiceString($"/hledatSmlouvy", $"ico:{Model.ICO}", (int)statistics[y].PocetSmluv, statistics[y].CelkovaHodnotaSmluv, y));
                                if (Model.PatrimStatu())
                                {
                                    sentences.Add("z toho "
                                        + NiceString($"/hledatSmlouvy", $"( hint.vztahSeSoukromymSubjektem:>0+) AND ico:{Model.ICO}", (int)statistics[y].PocetSmluvSeSoukromymSubj, statistics[y].CelkovaHodnotaSmluvSeSoukrSubj, y)
                                        + " se soukromými subjekty"
                                        );

                                }

                            }
                            @Html.Raw(HlidacStatu.Util.RenderData.RenderList(sentences))
                        </li>
                        <li>
                            @{
                                sentences.Clear();
                                sentences.Add($"Celkem {statistics[y].PercentSmluvBezCeny.ToString("P1")} smluv má skrytou cenu");
                                if (statistics[y].PocetSmluvSeZasadnimNedostatkem > 0)
                                {
                                    sentences.Add($"<a href='{ValidUrl("/hledatSmlouvy", "( chyby:zasadni )", y)}'>{Devmasters.Lang.Plural.Get(statistics[y].PocetSmluvSeZasadnimNedostatkem, "jednu smlouvu", "{0} smlouvy", "{0} smluv")}</a> má zásadní nedostatek");
                                }
                                if (statistics[y].PocetSmluvULimitu > 0)
                                {
                                    sentences.Add($"<a href='{ValidUrl("/hledatSmlouvy", "( hint.smlouvaULimitu:>0 )", y)}'>{Devmasters.Lang.Plural.Get(statistics[y].PocetSmluvULimitu, "jednu smlouvu", "{0} smlouvy", "{0} smluv")}</a> je s hodnotou těsně pod limitem veřejných zakázek");
                                }
                                if (Model.PatrimStatu() && (statistics[y].PercentSmluvPolitiky > 0))
                                {
                                    sentences.Add($"<a href='{ValidUrl("/hledatSmlouvy", "( sVazbouNaPolitikyNedavne:true ) ", y)}'>{(statistics[y].PercentSmluvPolitiky.ToString("P1"))}</a> smluv s firmami navázanými na politiky");
                                    //@
                                }
                            }
                            @Html.Raw(HlidacStatu.Util.RenderData.RenderList(sentences))
                        </li>
                    </ul>
                </div>

                if (
                    Model.AktualniVazby(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny).Count() > 0
                    && holdingSummaryAfter2016.PocetSmluv > 0
                    )
                {
                    <b style="padding-left:30px">Statistiky pro @(Model.JsemOVM()? "úřad a jeho podřízené organizace" : "subjekt a všechny dceřiné společnosti") </b>
                    <ul>
                        <li>
                            @{
                                sentences.Clear();
                                sentences.Add(NiceString($"/hledatSmlouvy", $"ico:{Model.ICO}", (int)statHoldingAktual[y].PocetSmluv, statHoldingAktual[y].CelkovaHodnotaSmluv, y));
                                if (Model.PatrimStatu())
                                {
                                    sentences.Add("z toho "
                                        + NiceString($"/hledatSmlouvy", $"( hint.vztahSeSoukromymSubjektem:>0+) AND ico:{Model.ICO}", (int)statHoldingAktual[y].PocetSmluvSeSoukromymSubj, statHoldingAktual[y].CelkovaHodnotaSmluvSeSoukrSubj, y)
                                        + " se soukromými subjekty"
                                        );

                                }

                            }
                            @Html.Raw(HlidacStatu.Util.RenderData.RenderList(sentences))
                        </li>
                        <li>
                            @{
                                sentences.Clear();
                                sentences.Add($"Celkem {statHoldingAktual[y].PercentSmluvBezCeny.ToString("P1")} smluv má skrytou cenu");
                                if (statHoldingAktual[y].PocetSmluvSeZasadnimNedostatkem > 0)
                                {
                                    sentences.Add($"<a href='{ValidUrl("/hledatSmlouvy", "( chyby:zasadni )", y)}'>{Devmasters.Lang.Plural.Get(statHoldingAktual[y].PocetSmluvSeZasadnimNedostatkem, "jednu smlouvu", "{0} smlouvy", "{0} smluv")}</a> má zásadní nedostatek");
                                }
                                if (statHoldingAktual[y].PocetSmluvULimitu > 0)
                                {
                                    sentences.Add($"<a href='{ValidUrl("/hledatSmlouvy", "( hint.smlouvaULimitu:>0 )", y)}'>{Devmasters.Lang.Plural.Get(statHoldingAktual[y].PocetSmluvULimitu, "jednu smlouvu", "{0} smlouvy", "{0} smluv")}</a> je s hodnotou těsně pod limitem veřejných zakázek");
                                }
                                if (Model.PatrimStatu() && (statHoldingAktual[y].PercentSmluvPolitiky > 0))
                                {
                                    sentences.Add($"<a href='{ValidUrl("/hledatSmlouvy", "( sVazbouNaPolitikyNedavne:true ) ", y)}'>{(statHoldingAktual[y].PercentSmluvPolitiky.ToString("P1"))}</a> smluv s firmami navázanými na politiky");
                                    //@
                                }
                            }
                            @Html.Raw(HlidacStatu.Util.RenderData.RenderList(sentences))
                        </li>
                    </ul>
                }
                <hr />
            }@*for y*@



        </div>

    </div>
