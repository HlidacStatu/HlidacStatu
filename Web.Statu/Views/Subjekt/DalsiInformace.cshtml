@model HlidacStatu.Lib.Data.Firma

@using Nest;
@using HlidacStatu.Web.Framework;
@using System.Collections.Generic;
@using System.Linq;
@using System;
@using System.Data;
@using HlidacStatu.Lib.Render;
@using HlidacStatu.Lib.Data;

@{
    Layout = null;
    ViewBag.Title = "Další informace " + Model.Jmeno;
}
<style>
    .chart-tooltip-shared {
        margin: 5px;
        border: none;
    }

    .chart-tooltip-shared td + td {
        color: #333333;
        font-weight: bold;
        text-align: right;
    }

    .chart-tooltip-shared td {
        padding: 5px;
    }

    .chart-title-shared {
        color: #28313B;
        font-family: Cabin;
        font-size: 18px;
        font-weight: bold;
    }

</style>

    @* První sloupec *@
<div class="col-sm-7 col-sm-pull-5 col-xs-12 col-xs-pull-0">

    @if (Model.KategorieOVM().Count() > 0)
    {
        <div>
            <h4>Kategorie OVM (orgánů veřejné moci)</h4>
            <p class="text-muted sub-header-info">Všechny kategorie, ve kterých je úřad veden v RPP (Registr práv a povinností). </p>
            @foreach (var cat in Model.KategorieOVM())
            {
                <div>@(cat.nazev)&nbsp;<a href="/HledatFirmy?q=kategorieid:@(cat.id)&subtitle=@(System.Net.WebUtility.UrlEncode($"Subjekty v kategorii {cat.nazev}"))"><i title="Najít další organizace v této kategorii" alt="Najít další organizace v této kategorii" class="fas fa-search"></i></a></div>
            }
        </div>
    }


    @if (HlidacStatu.Lib.StaticData.OrganizacniStrukturyUradu.Get().TryGetValue(Model.ICO, out var podrizeneOrg))
    {
        <div>
            <h4>Organizační struktura</h4>
            <ul>
                @foreach (var org in podrizeneOrg)
                {
                    <li><a href="/subjekt2/OrganizacniStruktura/@Model.ICO?orgId=@org.id">@org.oznaceni</a></li>
                }
            </ul>
        </div>
        <hr />
    }

    @{
        var sponzoring = Model.Events(e => e.Type == (int)FirmaEvent.Types.Sponzor)
            .GroupBy(s => (rok: s.DatumOd?.Year ?? 0, ico: s.Description),
            (key, val) => (Rok: key.rok, Ico: key.ico, Dar: val.Sum(x => x.AddInfoNum ?? 0)))
            .ToList();

        var sponzoringData = new ReportDataSource<(int Rok, string Ico, decimal Dar)>(
            new ReportDataSource<(int Rok, string Ico, decimal Dar)>.Column[]
            {
                    new ReportDataSource<(int Rok, string Ico, decimal Dar)>.Column()
                    {
                        Name = "Rok",
                        CssClass = "number",
                        HtmlRender = (x) => x.Rok.ToString(),
                        TextRender = (x) => x.Rok.ToString()

                    },
                    new ReportDataSource<(int Rok, string Ico, decimal Dar)>.Column()
                    {
                        Name = "Politická strana",
                        HtmlRender = (x) =>
                        $"<a href=\"/subjekt2/{x.Ico}\">{HlidacStatu.Lib.Data.Firmy.GetJmeno(x.Ico)}</a>"
                    },
                    new ReportDataSource<(int Rok, string Ico, decimal Dar)>.Column()
                    {
                        Name = "Celkem darovali",
                        TextRender = (x) => $"{x.Dar.ToString("N0")} Kč",
                        HtmlRender = (x) => $"{x.Dar.ToString("N0")}&nbsp;Kč",
                        OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.Dar),
                        CssClass = "number"
                    },

                });
        foreach (var dar in sponzoring)
        {
            sponzoringData.AddRow(dar);
        }
        sponzoringData.Title = "Přehled darů politickým stranám";
    }
    @if (sponzoring.Count > 0)
    {
        <div>
            <h4>Sponzorství politických stran</h4>
            @Html.DataToHTMLTable(sponzoringData)
        </div>
    }

    <hr /><hr />

    @{
        var serie = new HlidacStatu.Lib.Render.Series[]
        {
                new HlidacStatu.Lib.Render.Series()
                {
                    Color = "#AFB9C5",
                    Name = "pokustón",
                    Type = Series.SeriesType.column,
                    Data = new SeriesData[]
                {
                        new SeriesData()
                        {
                            X = 2000,
                            Y = 10000
                        },
                        new SeriesData()
                        {
                            X = 2001,
                            Y = 20000
                        },
                        new SeriesData()
                        {
                            X = 2002,
                            Y = 15000
                        },
                        new SeriesData()
                        {
                            X = 2003,
                            Y = 30315
                        }
                    },
                    SeriesTooltip = new SeriesTooltip()
                    {
                        ValueSuffix = "Kč"
                    }
                },
                new HlidacStatu.Lib.Render.Series()
                {
                    Color = "#DDE3E9",
                    Name = "bobek",
                    YAxis = 0,
                    Type = Series.SeriesType.column,
                    Data = new SeriesData[]
                {
                        new SeriesData()
                        {
                            X = 2000,
                            Y = 3000
                        },
                        new SeriesData()
                        {
                            X = 2001,
                            Y = 8000
                        },
                        new SeriesData()
                        {
                            X = 2002,
                            Y = 7000
                        },
                        new SeriesData()
                        {
                            X = 2003,
                            Y = 5000
                        }
                    }
                },
                new HlidacStatu.Lib.Render.Series()
                {
                    Color = "#2975DC",
                    Name = "bob",
                    Type = Series.SeriesType.line,
                    Data = new SeriesData[]
                {
                        new SeriesData()
                        {
                            X = 2000,
                            Y = 50125
                        },
                        new SeriesData()
                        {
                            X = 2001,
                            Y = 47854
                        },
                        new SeriesData()
                        {
                            X = 2002,
                            Y = 12000
                        },
                        new SeriesData()
                        {
                            X = 2003,
                            Y = 315211
                        }
                    },
                    SeriesTooltip = new SeriesTooltip()
                    {
                        ValueSuffix = "z klobouku",
                        ValuePrefix = "Králík"

                    }
                },
                new HlidacStatu.Lib.Render.Series()
                {
                    Color = "#E76605",
                    Name = "boba",
                    Type = Series.SeriesType.line,
                    Data = new SeriesData[]
                {
                        new SeriesData()
                        {
                            X = 2000,
                            Y = 30125
                        },
                        new SeriesData()
                        {
                            X = 2001,
                            Y = 45254
                        },
                        new SeriesData()
                        {
                            X = 2002,
                            Y = 22000
                        },
                        new SeriesData()
                        {
                            X = 2003,
                            Y = 115211
                        }
                    },
                    SeriesTooltip = new SeriesTooltip()
                    {
                        ValueSuffix = " sss",
                  
                    }
                },
            };
    }

    <script>
        $(function () {
            $('.random_first.btn').click(function () {
                $('.random_first.content').show();
                $('.random_second.content').hide();
                $('.random_first.btn').addClass("active");
                $('.random_second.btn').removeClass("active");
            });
            $('.random_second.btn').click(function () {
                $('.random_first.content').hide();
                $('.random_second.content').show();
                $('.random_first.btn').removeClass("active");
                $('.random_second.btn').addClass("active");
            });
        });
    </script>
    <div class="btn btn-default random_first">{firstButton}</div>
    <div class="btn btn-default random_second active">{secondButton}</div>
    <div class="random_first content">{first.ToHtmlString()}</div>
    <div class="random_second content" style="display:none;">{second.ToHtmlString()}</div>

    @* Tohle by mělo jít do skript části a pustit se jednou *@
    @Html.ColumnGraph("nazev grafu", serie)
    <hr /><hr />
</div>
