@model (HlidacStatu.Lib.Data.Firma Firma, List<(string Ico, int Rok, decimal Cerpano)> Cerpani)

@using Nest;
@using HlidacStatu.Web.Framework;
@using System.Collections.Generic;
@using System.Linq;
@using System;
@using System.Data;
@using HlidacStatu.Lib.Render;

@{ 
    ViewBag.Title = "Dotace " + Model.Firma.Jmeno;
}
@section breadcrumb
{
    <ol class="breadcrumb">
        <li><a href="/">Hlídač Státu</a></li>
        <li>Úřady a firmy</li>
        <li><a href="/subjekt2/@Model.Firma.ICO">@Model.Firma.Jmeno</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
}


@section scripts
{
    <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.19/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.js"></script>
    @Scripts.Render("~/bundles/highcharts")
    <script src="/scripts/highcharts-6/highcharts-more.js"></script>
    <script src="/scripts/highcharts-6/modules/heatmap.js"></script>
    <script src="/scripts/highcharts-6/modules/treemap.js"></script>
    <script>
        $(document).ready(function () {
            $('.datatable').DataTable({
                "language": {
                    "info": "Zobrazuji _START_. - _END_. z celkového počtu _TOTAL_ záznamů.",
                    "search": "Hledat:",
                    "lengthMenu": "Zobraz _MENU_ záznamů",
                    "thousands": " ",
                    "paginate": {
                        "first": "První",
                        "last": "Poslední",
                        "next": "Další",
                        "previous": "Předchozí"
                    },
                }
            });
        });

    </script>

    <script>
        $(function () {
            $('.toggle.btn').click(function () {
                $('.toggle').toggle();
            });

        });
    </script>

}

<style>
    .my-0 {
        margin-top: 0px;
        margin-bottom: 0px;
    }

    .py-0 {
        padding-top: 0px;
        padding-bottom: 0px;
    }

    .boxes h4 {
        font-size: 24px;
        font-weight: bold;
    }

    .head h3 {
        font-size: 40px;
        font-weight: bold;
    }

    p {
        font-size: 16px;
    }

    .watcher .btn {
        background-color: rgb(231,102,5);
        padding: 7px 15px;
        margin: 5px 0px;
        text-transform: none;
        font-size: 14px;
    }
</style>

<div class="head">
    <h3>@Html.KIndexLabelLink(Model.Firma.ICO, 30, linkToKindex: true)@Model.Firma.Jmeno: Dotace</h3>
    <div><a class="btn btn-primary" href="/subjekt2/@Model.Firma.ICO">Zpět na přehled</a></div>
    @WebUtil.CompanySummary(Model.Firma)
</div>
<hr />

<div class="row boxes">
    @* Pravý sloupec *@
    @Html.CachedAction(HtmlExtensions.CachedActionLength.Cache12H, "RightColumn", Model.Firma, Model.Firma.ICO,
        this.User.Identity.IsAuthenticated)

    @* Prázdný sloupec *@
    <div class="col-sm-1">
    </div>
    @* První sloupec *@
    <div class="col-sm-7 col-sm-pull-5 col-xs-12 col-xs-pull-0">
        <div>
            <p>
                2017 = @(Model.Firma.HoldingStatisticsDotace(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny).StatisticsForYear(2017)?.CelkemCerpano)
            </p>
            <p>
                2018 = @(Model.Firma.HoldingStatisticsDotace(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny).StatisticsForYear(2018)?.CelkemCerpano)
            </p>
            <p>
                2019 = @(Model.Firma.HoldingStatisticsDotace(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny).StatisticsForYear(2019)?.CelkemCerpano)
            </p>
            <h4>Souhrn</h4>
            @{
                var dotaceService = new HlidacStatu.Lib.Data.Dotace.DotaceService();

                string durl = "/dotace/hledat?Q=ico%3A+" + Model.Firma.ICO;
                var dotaceSuma = Model.Firma.StatistikaDotaci().Sum(s => s.CelkemCerpano);
                var dotacePocet = Model.Firma.StatistikaDotaci().Sum(v => v.PocetDotaci);

                var sdotaceKc = " v celkové hodnotě <b>" + HlidacStatu.Util.RenderData.NicePrice(dotaceSuma, html: true) + "</b>.";
            }

            @if (Model.Firma.JsemOVM())
            {
                <p>
                    Úřad @Devmasters.TextUtil.ShortenText(Model.Firma.Jmeno, 35)
                    @Html.Raw(Devmasters.Lang.Plural.GetWithZero(dotacePocet,
                                                " nedostal žádnou dotaci.",
                                                " dostal <a href='" + durl + "'><b>jednu dotaci</b></a>" + sdotaceKc,
                                                " dostal <a href='" + durl + "'><b>{0} dotace</b></a>" + sdotaceKc,
                                                " dostal <a href='" + durl + "'><b>{0} dotací</b></a>" + sdotaceKc))
                </p>
            }
            else
            {
                <p>
                    Firma @Devmasters.TextUtil.ShortenText(Model.Firma.Jmeno, 35)
                    @Html.Raw(Devmasters.Lang.Plural.GetWithZero(dotacePocet,
                                                " nedostala žádnou dotaci.",
                                                " dostala <a href='" + durl + "'><b>jednu dotaci</b></a>" + sdotaceKc,
                                                " dostala <a href='" + durl + "'><b>{0} dotace</b></a>" + sdotaceKc,
                                                " dostala <a href='" + durl + "'><b>{0} dotací</b></a>" + sdotaceKc))
                </p>
            }

            @if (Model.Firma.AktualniVazby(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny).Count() > 0)
            {
                var dotaceHoldingStat = dotaceService.GetStatisticsForHolding(Model.Firma.ICO);


                decimal totalSumDotaceHolding = dotaceHoldingStat.Sum(item => item.Value.Sum);
                int totalCountDotaceHolding = dotaceHoldingStat.Sum(item => item.Value.Count);

                if (totalCountDotaceHolding - dotacePocet > 0)
                {
                    var sdotaceHDiffKc = " v hodnotě <b>" + HlidacStatu.Util.RenderData.NicePrice(totalSumDotaceHolding - dotaceSuma, html: true) + "</b>.";
                    var sdotaceHKc = " v celkové hodnotě <b>" + HlidacStatu.Util.RenderData.NicePrice(totalSumDotaceHolding, html: true) + "</b>.";
                    string durlH = "/dotace/hledat?Q=holding%3A+" + Model.Firma.ICO;
                    if (Model.Firma.JsemOVM())
                    {
                        <p>
                            <b>@Devmasters.Lang.Plural.Get(dotaceHoldingStat.Count, "Jedna podřízená organizace", "{0} podřízená organizace", "{0} podřízených organizací")</b>
                            (z celkem @HlidacStatu.Util.RenderData.NiceNumber(Model.Firma.AktualniVazby(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny).Length))
                            úřadu @Devmasters.TextUtil.ShortenText(Model.Firma.Jmeno, 35)

                            @Devmasters.Lang.Plural.Get(dotaceHoldingStat.Count,
                                                        "dostala",
                                                        "dostaly",
                                                        "dostalo")
                            @Html.Raw(Devmasters.Lang.Plural.Get(totalCountDotaceHolding - dotacePocet,
                                                                                    " ještě <b>jednu dotaci</b>" + sdotaceHDiffKc,
                                                                                    " další <b>{0} dotace</b>" + sdotaceHDiffKc,
                                                                                    " dalších <b>{0} dotací</b>" + sdotaceHDiffKc))
                        </p>
                        <p>
                            Úřad <b>@(Model.Firma.Jmeno)</b> včetně podřízených organizací dostal celkem
                            @Html.Raw(Devmasters.Lang.Plural.Get(totalCountDotaceHolding,
                                                    " <a href='" + durlH + "'><b>jednu dotaci</b></a>" + sdotaceHKc,
                                                    " <a href='" + durlH + "'><b>{0} dotace</b></a>" + sdotaceHKc,
                                                    " <a href='" + durlH + "'><b>{0} dotací</b></a>" + sdotaceHKc))
                        </p> }
                    else
                    {
                        <p>
                            <b>@Devmasters.Lang.Plural.Get(dotaceHoldingStat.Count, "Jedna dceřinná společnost", "{0} dceřinné společnosti", "{0} dceřinných společností")</b>
                            (z celkem @HlidacStatu.Util.RenderData.NiceNumber(Model.Firma.AktualniVazby(HlidacStatu.Lib.Data.Relation.AktualnostType.Nedavny).Length))
                            firmy @Devmasters.TextUtil.ShortenText(Model.Firma.Jmeno, 35)

                            @Devmasters.Lang.Plural.Get(dotaceHoldingStat.Count,
                                                        "dostala",
                                                        "dostaly",
                                                        "dostalo")
                            @Html.Raw(Devmasters.Lang.Plural.Get(totalCountDotaceHolding - dotacePocet,
                                                                                    " ještě <b>jednu dotaci</b>" + sdotaceHDiffKc,
                                                                                    " další <b>{0} dotace</b>" + sdotaceHDiffKc,
                                                                                    " dalších <b>{0} dotací</b>" + sdotaceHDiffKc))
                        </p>
                        <p>
                            Celý holding včetně <b>@(Model.Firma.Jmeno)</b> dostal celkem
                            @Html.Raw(Devmasters.Lang.Plural.Get(totalCountDotaceHolding,
                                                    " <a href='" + durlH + "'><b>jednu dotaci</b></a>" + sdotaceHKc,
                                                    " <a href='" + durlH + "'><b>{0} dotace</b></a>" + sdotaceHKc,
                                                    " <a href='" + durlH + "'><b>{0} dotací</b></a>" + sdotaceHKc))
                        </p> }
                }
                else
                {
                    if (Model.Firma.JsemOVM())
                    {
                        <p>
                            <b>@Devmasters.Lang.Plural.Get(dotaceHoldingStat.Count, "Jedna podřízená organizace", "{0} podřízená organizace", "{0} podřízených organizací")</b>
                            úřadu @Devmasters.TextUtil.ShortenText(Model.Firma.Jmeno, 35) nedostaly žádné dotace.
                        </p> }
                    else
                    {
                        <p>
                            <b>@Devmasters.Lang.Plural.Get(dotaceHoldingStat.Count, "Jedna dceřinná společnost", "{0} dceřinné společnosti", "{0} dceřinných společností")</b>
                            firmy @Devmasters.TextUtil.ShortenText(Model.Firma.Jmeno, 35) nedostaly žádné dotace.
                        </p>}
                }
            }
            <hr />

            <h4>Přehled subjektu</h4>

            <div class="btn btn-default toggle">Graf/<small>Data</small></div>
            <div class="btn btn-default toggle" style="display:none;"><small>Graf</small>/Data</div>
            <div class="toggle">
                @{
                    var dataFirma = Model.Cerpani.Where(c => c.Ico == Model.Firma.ICO)
                        .GroupBy(s => s.Rok)
                        .Select(g => new ReportDataTimeValue()
                        {
                            Date = new DateTime(g.Key, 1, 1),
                            Value = g.Sum(x => x.Cerpano)
                        });


                    @UtilChart.SimpleColumnChart(
                       new (string name, IEnumerable<HlidacStatu.Lib.Render.ReportDataTimeValue> values)[] { (name: "Dotace po letech", values: dataFirma) },
                    "Přehled inkasovaných dotací", "Přehled dotací", 500);
                }
            </div>
            <div class="toggle" style="display:none;">
                @{
                    var companyDotace = Model.Cerpani
                        .Where(c => c.Ico == Model.Firma.ICO)
                        .GroupBy(c => c.Rok)
                        .Select(g => (Rok: g.Key, CerpanoCelkem: g.Sum(c => c.Cerpano)))
                        .Where(x => x.CerpanoCelkem > 0);

                    var reportData = new ReportDataSource<(int Rok, decimal CerpanoCelkem)>(
                        new ReportDataSource<(int Rok, decimal CerpanoCelkem)>.Column[]
                        {
                            new ReportDataSource<(int Rok, decimal CerpanoCelkem)>.Column()
                            {
                                Name = "Rok",
                                CssClass = "number",
                                HtmlRender = (x) => x.Rok.ToString(),
                                TextRender = (x) => x.Rok.ToString()

                            },
                            new ReportDataSource<(int Rok, decimal CerpanoCelkem)>.Column()
                            {
                                Name = "Čerpáno",
                                TextRender = (x) => $"{x.CerpanoCelkem.ToString("N0")} Kč",
                                HtmlRender = (x) => $"{x.CerpanoCelkem.ToString("N0")}&nbsp;Kč",
                                OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.CerpanoCelkem),
                                CssClass = "number"
                            },
                            new ReportDataSource<(int Rok, decimal CerpanoCelkem)>.Column()
                            {
                                Name = "Detaily",
                                HtmlRender = (x) =>
                                $"<a href=\"/dotace/hledat?Q=ico:{Model.Firma.ICO} AND rozhodnuti.cerpani.guessedYear:{x.Rok}\">Dotace za rok {x.Rok}</a>"
                            }
}
                    );

                    foreach (var dot in companyDotace)
                    {
                        reportData.AddRow(dot);
                    }
                    reportData.Title = "Přehled čerpání dotací společnosti";
                }

                @Html.DataToHTMLTable(reportData)
            </div>


            <hr />
            <hr />

            @if (Model.Firma.JsemOVM())
            {
                <h4>Informace o podřízených organizacích</h4>
            }
            else
            {
                <h4>Informace o holdingu</h4>
            }
            <div class="btn btn-default toggle">Graf/<small>Data</small></div>
            <div class="btn btn-default toggle" style="display:none;"><small>Graf</small>/Data</div>
            <div class="toggle">
                @{
                    var dataHolding = Model.Cerpani
                        .GroupBy(c => c.Rok)
                        .Select(g => new ReportDataTimeValue()
                        {
                            Date = new DateTime(g.Key, 1, 1),
                            Value = g.Sum(c => c.Cerpano)
                        });

                    @UtilChart.SimpleColumnChart(
                       new[] { (name: "Dotace po letech", values: dataHolding) },
                    "Přehled inkasovaných dotací za celý holding", "Přehled dotací holdingu", 500);

                    var holdingDotace = Model.Cerpani
                        .GroupBy(c => c.Ico)
                        .Select(g => (Ico: g.Key,
                            Nazev: HlidacStatu.Lib.Data.Firmy.GetJmeno(g.Key),
                            CerpanoCelkem: g.Sum(c => c.Cerpano)))
                        .Where(x => x.CerpanoCelkem > 0);


                    var holdingReportData = new ReportDataSource<(string Ico, string Nazev, decimal CerpanoCelkem)>(
                        new ReportDataSource<(string Ico, string Nazev, decimal CerpanoCelkem)>.Column[]
                        {
                            new ReportDataSource<(string Ico, string Nazev, decimal CerpanoCelkem)>.Column()
                            {
                                Name = "Subjekt",
                                TextRender = (x) => x.Nazev,
                                HtmlRender = (x) => x.Nazev,
                            },
                            new ReportDataSource<(string Ico, string Nazev, decimal CerpanoCelkem)>.Column()
                            {
                                Name = "Suma",
                                TextRender = (x) => $"{x.CerpanoCelkem.ToString("N0")} Kč",
                                HtmlRender = (x) => $"{x.CerpanoCelkem.ToString("N0")}&nbsp;Kč",
                                OrderValueRender = (x) => HlidacStatu.Util.RenderData.OrderValueFormat(x.CerpanoCelkem),
                                CssClass = "number"
                            },
                            new ReportDataSource<(string Ico, string Nazev, decimal CerpanoCelkem)>.Column()
                            {
                                Name = "Detaily",
                                HtmlRender = (x) =>
                                $"<a href=\"/dotace/hledat?Q=ico:{x.Ico}\">Dotace pro {x.Nazev}</a>"
                            }
}
                    );
                    foreach (var dot in holdingDotace)
                    {
                        holdingReportData.AddRow(dot);
                    }
                    holdingReportData.Title = "Přehled čerpání dotací holdingu";

                }
            </div>
            <div class="toggle" style="display:none;">
                @Html.DataToHTMLTable(holdingReportData)
            </div>
        </div>

    </div>
</div>