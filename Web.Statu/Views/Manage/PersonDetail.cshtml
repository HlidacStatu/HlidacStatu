@model HlidacStatu.Lib.Data.Osoba
@using Devmasters.Core
@using HlidacStatu.Lib.Data

@{
    ViewBag.Title = "PersonDetail";
    var typeList = Devmasters.Core.Enums
                      .EnumToEnumerable(typeof(HlidacStatu.Lib.Data.OsobaEvent.Types))
                      .Select(m => new System.Web.Mvc.SelectListItem() { Value = m.Value, Text = "" + m.Key })
                      .ToList();

}

<h2>PersonDetail</h2>

<div class="col-xs-12">
    <h4>Osoba</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>@Html.DisplayNameFor(model => model.TitulPred)</dt>
        <dd>@Model.TitulPred</dd>
        <dt>@Html.DisplayNameFor(model => model.Jmeno)</dt>
        <dd>@Model.Jmeno</dd>
        <dt>@Html.DisplayNameFor(model => model.Prijmeni)</dt>
        <dd>@Model.Prijmeni</dd>
        <dt>@Html.DisplayNameFor(model => model.TitulPo)</dt>
        <dd>@Model.TitulPo</dd>
        <dt>@Html.DisplayNameFor(model => model.Narozeni)</dt>
        <dd>@(Model.Narozeni?.ToString("dd.MM.yyyy") ?? " ??? ")</dd>
        <dt>@Html.DisplayNameFor(model => model.Umrti)</dt>
        <dd>@(Model.Umrti?.ToString("dd.MM.yyyy") ?? " ??? ")</dd>
        <dt>@Html.DisplayNameFor(model => model.Status)</dt>
        <dd>@(((HlidacStatu.Lib.Data.Osoba.StatusOsobyEnum)Model.Status).ToNiceDisplayName())</dd>
        <dt>@Html.DisplayNameFor(model => model.LastUpdate)</dt>
        <dd>@Model.LastUpdate</dd>
    </dl>
    <p>
        @Html.ActionLink("Editovat osobu", "EditPersonNP", new { id = Model.InternalId }, new { @class = "btn btn-primary btn-primary-new" })
    </p>
</div>
<div class="col-xs-12">
    <h4>Události</h4>
    <hr />
    <button type="button"
            class="btn btn-primary"
            data-toggle="modal"
            data-target="#eventModal"
            data-personid="@Model.InternalId"
            data-eventid=""
            data-datumod=""
            data-datumdo=""
            data-titulek=""
            data-polstr=""
            data-castka=""
            data-typ=""
            data-zdroj=""
            data-action="create">
        Přidat event
    </button>
    @if (Model.Events().Count() > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Datum od</th>
                    <th>Datum do</th>
                    <th>Titulek</th>
                    <th>Politická strana</th>
                    <th>Částka</th>
                    <th>Typ události</th>
                    <th>Zdroj</th>
                    <th>akce</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var udalost in Model.Events())
                {
                    <tr>
                        <td>
                            @(udalost.DatumOd?.ToString("dd.MM.yyyy") ?? " ??? ")
                        </td>
                        <td>
                            @(udalost.DatumDo?.ToString("dd.MM.yyyy") ?? " ??? ")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => udalost.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => udalost.PolitickaStrana)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => udalost.AddInfoNum)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => udalost.TypeName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => udalost.Zdroj)
                        </td>
                        <td>
                            <button type="button"
                                    class="btn btn-primary"
                                    data-toggle="modal"
                                    data-target="#eventModal"
                                    data-personid="@Model.InternalId"
                                    data-eventid="@udalost.pk"
                                    data-datumod="@(udalost.DatumOd?.ToString("dd.MM.yyyy"))"
                                    data-datumdo="@(udalost.DatumDo?.ToString("dd.MM.yyyy"))"
                                    data-titulek="@udalost.Title"
                                    data-polstr="@udalost.PolitickaStrana"
                                    data-castka="@(udalost.AddInfoNum?.ToString("0"))"
                                    data-typ="@udalost.Type"
                                    data-zdroj="@udalost.Zdroj"
                                    data-action="edit">
                                Editovat
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
<p>

    @Html.ActionLink("Back to List", "FindPerson")
</p>


<!-- ------------------------------MODAL WINDOW------------------------------ -->
<!-- Modal -->
<div class="modal fade" id="eventModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventModalLabel">Editovat událost</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="eventId" value="0" />
                    <input type="hidden" id="personId" value="0" />
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label text-box single-line">Datum od:</label>
                        <input type="datetime" class="form-control" id="datumOd">
                        <span class="field-validation-valid text-danger" data-valmsg-for="DatumOd" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label text-box single-line">Datum do:</label>
                        <input type="datetime" class="form-control" id="datumDo">
                        <span class="field-validation-valid text-danger" data-valmsg-for="DatumDo" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Titulek:</label>
                        <input type="text" class="form-control" id="titulek">
                        <span class="field-validation-valid text-danger" data-valmsg-for="Title" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Politická strana:</label>
                        <input type="text" class="form-control" id="polstr">
                        <span class="field-validation-valid text-danger" data-valmsg-for="PolitickaStrana" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Částka:</label>
                        <input type="text" class="form-control" id="castka">
                        <span class="field-validation-valid text-danger" data-valmsg-for="AddInfoNum" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Typ události:</label>
                        @*<input type="text" class="form-control" id="typ">*@
                        <select class="form-control" id="typ">
                            @for (int i = 0; i < typeList.Count; i++)
                            {
                                <option value="@typeList[i].Value">@typeList[i].Text</option>
                            }
                        </select>
                        <span class="field-validation-valid text-danger" data-valmsg-for="Type" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Zdroj:</label>
                        <input type="text" class="form-control" id="zdroj">
                        <span class="field-validation-valid text-danger" data-valmsg-for="Zdroj" data-valmsg-replace="true"></span>
                    </div>


                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Zrušit</button>
                <button type="button" class="btn btn-primary" id="sendButton">Uložit</button>
            </div>
        </div>
    </div>
</div>

<script>
    $('#eventModal').on('show.bs.modal', function (event) {
        // clear previous error messages
        clearErrorMessages();

        // load data
        var button = $(event.relatedTarget) // Button that triggered the modal
        var personId = button.data('personid') // Extract info from data-* attributes
        var eventId = button.data('eventid') // Extract info from data-* attributes
        var datumOd = button.data('datumod')
        var datumDo = button.data('datumdo')
        var titulek = button.data('titulek')
        var polstr = button.data('polstr')
        var castka = button.data('castka')
        var typ = button.data('typ')
        var zdroj = button.data('zdroj')

        // set modal window
        var modal = $(this)
        if (button.data('action') === 'create') {
            modal.find('#eventModalLabel').text("Vytvořit novou událost");
            modal.find('#sendButton').off("click").on("click", function () { createEvent() });
        }
        else {
            modal.find('#eventModalLabel').text("Editovat událost");
            modal.find('#sendButton').off("click").on("click", function () { editEvent() });
        }
        modal.find('#eventId').val(eventId)
        modal.find('#personId').val(personId)
        modal.find('#datumOd').val(datumOd)
        modal.find('#datumDo').val(datumDo)
        modal.find('#titulek').val(titulek)
        modal.find('#polstr').val(polstr)
        modal.find('#castka').val(castka)
        modal.find('#typ').val(typ)
        modal.find('#zdroj').val(zdroj)
    })

    function editEvent() {
        var osobaEvent = {
            "pk": document.getElementById("eventId").value,
            "Title": document.getElementById("titulek").value,
            "PolitickaStrana": document.getElementById("polstr").value,
            "AddInfoNum": document.getElementById("castka").value,
            "DatumOd": document.getElementById("datumOd").value,
            "DatumDo": document.getElementById("datumDo").value,
            "Type": document.getElementById("typ").value,
            "Zdroj": document.getElementById("zdroj").value

        }
        clearErrorMessages();
        $.post("/manage/updateEvent", osobaEvent)
            .done(function (data) {
                window.location.reload();
            })
            .fail(function (data) {
                displayValidationErrors(data.responseJSON);

                // something like $('input[name="' + err.key + '"]')
            });
    }

    function createEvent() {
        var osobaEvent = {
            "OsobaId": document.getElementById("personId").value,
            "Title": document.getElementById("titulek").value,
            "PolitickaStrana": document.getElementById("polstr").value,
            "AddInfoNum": document.getElementById("castka").value,
            "DatumOd": document.getElementById("datumOd").value,
            "DatumDo": document.getElementById("datumDo").value,
            "Type": document.getElementById("typ").value,
            "Zdroj": document.getElementById("zdroj").value

        }
        clearErrorMessages();
        $.post("/manage/createEvent", osobaEvent)
            .done(function (data) {
                window.location.reload();
            })
            .fail(function (data) {
                displayValidationErrors(data.responseJSON);
            });
    }


    function displayValidationErrors(errors) {
        for (var i = 0; i < errors.length; i++) {
            $('span[data-valmsg-for="' + errors[i].key + '"]').text(errors[i].errors[0]);
        }
    }

    function clearErrorMessages() {
        document.querySelectorAll("#eventModal .modal-body .field-validation-valid").forEach(item => item.innerText = "");
    }

</script>